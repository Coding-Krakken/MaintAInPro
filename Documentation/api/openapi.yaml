openapi: 3.0.0
info:
  title: MaintAInPro CMMS API
  version: 1.0.0
  description: Enterprise Maintenance Management System REST API
  contact:
    name: MaintAInPro Support
    url: https://maintainpro.vercel.app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://maintainpro.vercel.app/api
    description: Production server
  - url: http://localhost:5000/api
    description: Development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer token for authentication
    organizationHeader:
      type: apiKey
      in: header
      name: X-Organization-ID
      description: Organization ID for multi-tenant access
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        message:
          type: string
          description: Detailed error description
        code:
          type: integer
          description: HTTP status code
      required:
        - error
    WorkOrder:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique work order identifier
        title:
          type: string
          description: Work order title
          maxLength: 255
        description:
          type: string
          description: Detailed description of the work
        status:
          type: string
          enum:
            - new
            - assigned
            - in_progress
            - completed
            - verified
            - closed
          description: Current status of the work order
        priority:
          type: string
          enum:
            - low
            - medium
            - high
            - critical
          description: Priority level
        type:
          type: string
          enum:
            - corrective
            - preventive
            - emergency
          description: Type of work order
        equipmentId:
          type: string
          format: uuid
          description: Associated equipment ID
        assignedTo:
          type: string
          format: uuid
          description: Assigned technician user ID
        estimatedHours:
          type: number
          description: Estimated completion time in hours
        actualHours:
          type: number
          description: Actual completion time in hours
        dueDate:
          type: string
          format: date-time
          description: Due date for completion
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
      required:
        - id
        - title
        - status
        - priority
        - type
    Equipment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique equipment identifier
        name:
          type: string
          description: Equipment name
        assetTag:
          type: string
          description: Asset tag number
        manufacturer:
          type: string
          description: Equipment manufacturer
        model:
          type: string
          description: Equipment model
        serialNumber:
          type: string
          description: Serial number
        location:
          type: string
          description: Physical location
        status:
          type: string
          enum:
            - active
            - inactive
            - maintenance
            - retired
          description: Equipment status
        installDate:
          type: string
          format: date
          description: Installation date
        warrantyExpiry:
          type: string
          format: date
          description: Warranty expiration date
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - id
        - name
        - assetTag
        - status
    Part:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique part identifier
        partNumber:
          type: string
          description: Part number
        description:
          type: string
          description: Part description
        manufacturer:
          type: string
          description: Part manufacturer
        category:
          type: string
          description: Part category
        unitPrice:
          type: number
          description: Unit price
        stockQuantity:
          type: integer
          description: Current stock quantity
        minStockLevel:
          type: integer
          description: Minimum stock level for reordering
        location:
          type: string
          description: Storage location
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - id
        - partNumber
        - description
        - stockQuantity
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique user identifier
        email:
          type: string
          format: email
          description: User email address
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        phone:
          type: string
          description: Phone number
        role:
          type: string
          enum:
            - admin
            - manager
            - technician
            - user
          description: User role
        active:
          type: boolean
          description: Account status
        warehouseId:
          type: string
          format: uuid
          description: Associated warehouse/organization ID
        createdAt:
          type: string
          format: date-time
          description: Account creation timestamp
      required:
        - id
        - email
        - firstName
        - lastName
        - role
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Unauthorized
            message: Access token is missing or invalid
            code: 401
    ForbiddenError:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Forbidden
            message: Insufficient permissions for this operation
            code: 403
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Not Found
            message: The requested resource could not be found
            code: 404
    ValidationError:
      description: Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Validation Error
            message: The provided data is invalid
            code: 400
security:
  - bearerAuth: []
paths:
  /health:
    get:
      summary: Enhanced health check
      description: >-
        Returns comprehensive health status of the API including database,
        WebSocket connections, and system metrics
      tags:
        - Health
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - healthy
                      - degraded
                      - unhealthy
                  timestamp:
                    type: string
                    format: date-time
                  env:
                    type: string
                  port:
                    type: number
                  websocket:
                    type: object
                  version:
                    type: string
        '207':
          description: System is degraded
        '503':
          description: System is unhealthy
  /health/basic:
    get:
      summary: Basic health check
      description: Simple health check endpoint for load balancers (returns just "OK")
      tags:
        - Health
      responses:
        '200':
          description: Service is up
          content:
            text/plain:
              schema:
                type: string
                example: OK
  /auth/login:
    post:
      summary: User authentication
      description: Authenticate a user with email and password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
                password:
                  type: string
                  description: User password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/Profile'
                  token:
                    type: string
                    description: JWT access token
                  refreshToken:
                    type: string
                    description: JWT refresh token
                  sessionId:
                    type: string
                    description: Session identifier
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          description: Too many login attempts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /equipment:
    get:
      summary: Get equipment list
      description: Retrieve a list of all equipment in the organization
      tags:
        - Equipment
      responses:
        '200':
          description: List of equipment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
        '503':
          description: Service temporarily unavailable
  /work-orders:
    get:
      summary: Get work orders
      description: Retrieve a list of work orders with optional filtering
      tags:
        - Work Orders
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
          description: Filter by status (comma-separated for multiple values)
          example: new,assigned,in_progress
        - in: query
          name: assignedTo
          schema:
            type: string
            format: uuid
          description: Filter by assigned user ID
        - in: query
          name: priority
          schema:
            type: string
          description: Filter by priority (comma-separated for multiple values)
          example: high,critical
      responses:
        '200':
          description: List of work orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkOrder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '503':
          description: Service temporarily unavailable
    post:
      summary: Create work order
      description: Create a new work order
      tags:
        - Work Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Work order title
                  maxLength: 255
                description:
                  type: string
                  description: Detailed description
                priority:
                  type: string
                  enum:
                    - low
                    - medium
                    - high
                    - critical
                  description: Priority level
                type:
                  type: string
                  enum:
                    - corrective
                    - preventive
                    - emergency
                  description: Work order type (defaults to 'corrective')
                equipmentId:
                  type: string
                  format: uuid
                  description: Associated equipment ID
                assignedTo:
                  type: string
                  format: uuid
                  description: Assigned technician user ID
                estimatedHours:
                  type: number
                  description: Estimated completion time in hours
                dueDate:
                  type: string
                  format: date-time
                  description: Due date for completion
              required:
                - title
                - priority
      responses:
        '201':
          description: Work order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /parts:
    get:
      summary: Get parts inventory
      description: Retrieve a list of all parts in the inventory
      tags:
        - Parts & Inventory
      responses:
        '200':
          description: List of parts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Part'
        '500':
          description: Internal server error
tags: []
