#!/bin/bash

# Environment Variables Diagnostic Script
# Use this script to debug environment variable issues
# DO NOT run this in CI unless debugging - it may expose secrets

echo "üîç Environment Variables Diagnostic"
echo "=================================="

echo ""
echo "üì¶ Node.js Environment:"
echo "NODE_VERSION: $(node --version 2>/dev/null || echo 'Not installed')"
echo "NPM_VERSION: $(npm --version 2>/dev/null || echo 'Not installed')"
echo "NODE_ENV: ${NODE_ENV:-'not set'}"

echo ""
echo "üöÄ Vercel Environment:"
echo "VERCEL_ENV: ${VERCEL_ENV:-'not set'}"
echo "VERCEL_URL: ${VERCEL_URL:-'not set'}"
echo "VERCEL_REGION: ${VERCEL_REGION:-'not set'}"
echo "VERCEL_GIT_COMMIT_SHA: ${VERCEL_GIT_COMMIT_SHA:-'not set'}"
echo "VERCEL_DEPLOYMENT_ID: ${VERCEL_DEPLOYMENT_ID:-'not set'}"

echo ""
echo "üîê Authentication Variables:"
if [[ -n "$JWT_SECRET" ]]; then
  echo "JWT_SECRET: ‚úÖ Set (${#JWT_SECRET} characters)"
else
  echo "JWT_SECRET: ‚ùå Not set"
fi

if [[ -n "$JWT_REFRESH_SECRET" ]]; then
  echo "JWT_REFRESH_SECRET: ‚úÖ Set (${#JWT_REFRESH_SECRET} characters)"
else
  echo "JWT_REFRESH_SECRET: ‚ùå Not set"
fi

echo ""
echo "üíæ Database Variables:"
if [[ -n "$DATABASE_URL" ]]; then
  echo "DATABASE_URL: ‚úÖ Set"
  # Show only the protocol and host, not the full URL with credentials
  DB_MASKED=$(echo "$DATABASE_URL" | sed 's|://[^@]*@|://***:***@|')
  echo "DATABASE_URL (masked): $DB_MASKED"
else
  echo "DATABASE_URL: ‚ùå Not set"
fi

if [[ -n "$POSTGRES_URL" ]]; then
  echo "POSTGRES_URL: ‚úÖ Set"
else
  echo "POSTGRES_URL: ‚ùå Not set"
fi

echo ""
echo "üìß Email Variables:"
if [[ -n "$SMTP_HOST" ]]; then
  echo "SMTP_HOST: ‚úÖ Set ($SMTP_HOST)"
else
  echo "SMTP_HOST: ‚ùå Not set"
fi

if [[ -n "$SMTP_PORT" ]]; then
  echo "SMTP_PORT: ‚úÖ Set ($SMTP_PORT)"
else
  echo "SMTP_PORT: ‚ùå Not set"
fi

echo ""
echo "üéõÔ∏è Feature Flags:"
echo "FEATURE_AI_ENABLED: ${FEATURE_AI_ENABLED:-'not set (defaults to false)'}"
echo "FEATURE_REALTIME_ENABLED: ${FEATURE_REALTIME_ENABLED:-'not set (defaults to false)'}"
echo "FEATURE_ADVANCED_ANALYTICS: ${FEATURE_ADVANCED_ANALYTICS:-'not set (defaults to false)'}"
echo "FEATURE_MOBILE_APP: ${FEATURE_MOBILE_APP:-'not set (defaults to false)'}"

echo ""
echo "üìä Monitoring Variables:"
if [[ -n "$SENTRY_DSN" ]]; then
  echo "SENTRY_DSN: ‚úÖ Set"
else
  echo "SENTRY_DSN: ‚ùå Not set"
fi

if [[ -n "$ANALYTICS_ID" ]]; then
  echo "ANALYTICS_ID: ‚úÖ Set ($ANALYTICS_ID)"
else
  echo "ANALYTICS_ID: ‚ùå Not set"
fi

echo ""
echo "üåê API Keys & External Services:"
if [[ -n "$OPENAI_API_KEY" ]]; then
  echo "OPENAI_API_KEY: ‚úÖ Set (${#OPENAI_API_KEY} characters)"
else
  echo "OPENAI_API_KEY: ‚ùå Not set"
fi

if [[ -n "$STRIPE_SECRET_KEY" ]]; then
  echo "STRIPE_SECRET_KEY: ‚úÖ Set"
else
  echo "STRIPE_SECRET_KEY: ‚ùå Not set"
fi

echo ""
echo "‚öôÔ∏è Build Variables:"
echo "BUILD_ID: ${BUILD_ID:-'not set'}"
echo "CI: ${CI:-'not set'}"
echo "GITHUB_SHA: ${GITHUB_SHA:-'not set'}"

echo ""
echo "üìù Required for Autonomous Operations:"
echo "VERCEL_TOKEN: ${VERCEL_TOKEN:+‚úÖ Set}${VERCEL_TOKEN:-‚ùå Not set}"
echo "VERCEL_ORG_ID: ${VERCEL_ORG_ID:+‚úÖ Set}${VERCEL_ORG_ID:-‚ùå Not set}"
echo "VERCEL_PROJECT_ID: ${VERCEL_PROJECT_ID:+‚úÖ Set}${VERCEL_PROJECT_ID:-‚ùå Not set}"

echo ""
echo "=================================="
echo "‚úÖ Diagnostic complete"

# Check for common issues
echo ""
echo "üîß Common Issues Check:"

if [[ -z "$DATABASE_URL" ]]; then
  echo "‚ö†Ô∏è  Missing DATABASE_URL - Application may fail to start"
fi

if [[ -z "$JWT_SECRET" ]]; then
  echo "‚ö†Ô∏è  Missing JWT_SECRET - Authentication will fail"
fi

if [[ -z "$VERCEL_TOKEN" ]] && [[ "$CI" == "true" ]]; then
  echo "‚ö†Ô∏è  Missing VERCEL_TOKEN - Automated deployments will fail"
fi

if [[ "$NODE_ENV" == "production" ]] && [[ -z "$SENTRY_DSN" ]]; then
  echo "‚ö†Ô∏è  Missing SENTRY_DSN - Error tracking disabled in production"
fi

echo ""
echo "For setup instructions, see: Documentation/Development/Vercel.md"
