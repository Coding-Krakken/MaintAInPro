<testsuites id="" name="" tests="46" failures="22" skipped="1" errors="0" time="191.879807">
<testsuite name="admin/health-dashboard.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="12" failures="3" skipped="0" time="60.743" errors="0">
<testcase name="Health Dashboard E2E › should display health dashboard correctly" classname="admin/health-dashboard.spec.ts" time="4.591">
</testcase>
<testcase name="Health Dashboard E2E › should display memory usage information" classname="admin/health-dashboard.spec.ts" time="4.557">
</testcase>
<testcase name="Health Dashboard E2E › should display feature status" classname="admin/health-dashboard.spec.ts" time="1.779">
</testcase>
<testcase name="Health Dashboard E2E › should display deployment information" classname="admin/health-dashboard.spec.ts" time="1.788">
</testcase>
<testcase name="Health Dashboard E2E › should display websocket connections" classname="admin/health-dashboard.spec.ts" time="1.793">
</testcase>
<testcase name="Health Dashboard E2E › should refresh data when refresh button is clicked" classname="admin/health-dashboard.spec.ts" time="2.388">
<failure message="health-dashboard.spec.ts:118:3 should refresh data when refresh button is clicked" type="FAILURE">
<![CDATA[  [chromium] › admin/health-dashboard.spec.ts:118:3 › Health Dashboard E2E › should refresh data when refresh button is clicked 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 1
    Received:   0

      136 |
      137 |     // Verify that an additional API call was made
    > 138 |     expect(apiCallCount).toBeGreaterThan(1);
          |                          ^
      139 |   });
      140 |
      141 |   test('should handle error state correctly', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/admin/health-dashboard.spec.ts:138:26

    Error Context: ../../test-results/playwright-artifacts/admin-health-dashboard-Hea-9240f-n-refresh-button-is-clicked-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/admin-health-dashboard-Hea-9240f-n-refresh-button-is-clicked-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Health Dashboard E2E › should handle error state correctly" classname="admin/health-dashboard.spec.ts" time="2.27">
</testcase>
<testcase name="Health Dashboard E2E › should handle unhealthy status" classname="admin/health-dashboard.spec.ts" time="2.614">
</testcase>
<testcase name="Health Dashboard E2E › should auto-refresh every 30 seconds" classname="admin/health-dashboard.spec.ts" time="30.048">
<failure message="health-dashboard.spec.ts:204:3 should auto-refresh every 30 seconds" type="FAILURE">
<![CDATA[  [chromium] › admin/health-dashboard.spec.ts:204:3 › Health Dashboard E2E › should auto-refresh every 30 seconds 

    Test timeout of 30000ms exceeded.

    Error: page.waitForTimeout: Test timeout of 30000ms exceeded.

      215 |     // Wait for at least 30 seconds to verify auto-refresh
      216 |     // Note: In a real test, you might want to mock timers for faster execution
    > 217 |     await page.waitForTimeout(32000);
          |                ^
      218 |
      219 |     // Should have made at least one additional API call due to auto-refresh
      220 |     expect(apiCalls.length).toBeGreaterThan(1);
        at /workspaces/MaintAInPro/tests/e2e/admin/health-dashboard.spec.ts:217:16

    Error Context: ../../test-results/playwright-artifacts/admin-health-dashboard-Hea-b67d3-to-refresh-every-30-seconds-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/admin-health-dashboard-Hea-b67d3-to-refresh-every-30-seconds-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Health Dashboard E2E › should display loading state during refresh" classname="admin/health-dashboard.spec.ts" time="1.39">
</testcase>
<testcase name="Health Dashboard E2E › should be accessible" classname="admin/health-dashboard.spec.ts" time="1.265">
</testcase>
<testcase name="Health Dashboard E2E › should navigate between admin tabs" classname="admin/health-dashboard.spec.ts" time="6.26">
<failure message="health-dashboard.spec.ts:271:3 should navigate between admin tabs" type="FAILURE">
<![CDATA[  [chromium] › admin/health-dashboard.spec.ts:271:3 › Health Dashboard E2E › should navigate between admin tabs 

    Error: expect(locator).toHaveAttribute(expected) failed

    Locator: locator('button').filter({ hasText: 'System Health' })
    Expected string: "false"
    Received: <element(s) not found>
    Timeout: 5000ms

    Call log:
      - Expect "toHaveAttribute" with timeout 5000ms
      - waiting for locator('button').filter({ hasText: 'System Health' })


      282 |     // Check that Performance tab is now active
      283 |     await expect(performanceTab).toHaveAttribute('aria-selected', 'true');
    > 284 |     await expect(healthTab).toHaveAttribute('aria-selected', 'false');
          |                             ^
      285 |
      286 |     // Navigate back to Health tab
      287 |     await healthTab.click();
        at /workspaces/MaintAInPro/tests/e2e/admin/health-dashboard.spec.ts:284:29

    Error Context: ../../test-results/playwright-artifacts/admin-health-dashboard-Hea-f283d-navigate-between-admin-tabs-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/admin-health-dashboard-Hea-f283d-navigate-between-admin-tabs-chromium/error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="basic.e2e.test.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="4" failures="0" skipped="1" time="0.343" errors="0">
<testcase name="Basic E2E Tests › should load the homepage" classname="basic.e2e.test.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Basic E2E Tests › should verify test framework" classname="basic.e2e.test.ts" time="0.183">
</testcase>
<testcase name="Responsive Design Tests › should work on mobile viewport" classname="basic.e2e.test.ts" time="0.076">
</testcase>
<testcase name="Responsive Design Tests › should work on desktop viewport" classname="basic.e2e.test.ts" time="0.084">
</testcase>
</testsuite>
<testsuite name="debug-auth-status.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.795" errors="0">
<testcase name="debug authentication status and environment" classname="debug-auth-status.spec.ts" time="0.795">
<system-out>
<![CDATA[API Response Status: [33m401[39m
API Response Body: {"message":"Invalid credentials"}
✅ Authentication is working properly - invalid credentials rejected
Valid Credentials Status: [33m401[39m
Valid Credentials Body: {"message":"Invalid credentials"}
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="debug-database-users.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="1.646" errors="0">
<testcase name="debug: check database users and authentication flow" classname="debug-database-users.spec.ts" time="1.646">
<system-out>
<![CDATA[Database Status: {
  "name": "storage_layer",
  "status": "healthy",
  "responseTime": 20,
  "details": {
    "warehouses_count": 1,
    "storage_type": "database",
    "operations": "functional"
  }
}

--- Testing user: supervisor@maintainpro.com ---
Status: 401
Body: {"message":"Invalid credentials"}
❌ Login failed

--- Testing user: technician@maintainpro.com ---
Status: 401
Body: {"message":"Invalid credentials"}
❌ Login failed

--- Testing user: test@example.com ---
Status: 200
Body: {"user":{"id":"123e4567-e89b-12d3-a456-426614174000","email":"test@example.com","firstName":"Test","lastName":"User","role":"maintenance_manager","warehouseId":null,"emailVerified":false,"mfaEnabled":false},"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjNlNDU2Ny1lODliLTEyZDMtYTQ1Ni00MjY2MTQxNzQwMDAiLCJlbWFpbCI6IiIsInJvbGUiOiJtYWludGVuYW5jZV9tYW5hZ2VyIiwid2FyZWhvdXNlSWQiOm51bGwsInNlc3Npb25JZCI6ImY4NTRkMWRlLWFhODItNDczMi1hM2YwLWJkY2M0MWZkNDQ5YSIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTYxNzY2ODcsImV4cCI6MTc1NjE3NzU4NywiYXVkIjoibWFpbnRhaW5wcm8tYXBwIiwiaXNzIjoibWFpbnRhaW5wcm8tY21tcyJ9.983O3XpSyr6M3pEqsNt4WyKqYiglnGaMBF6mj7tveyg","refreshToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjNlNDU2Ny1lODliLTEyZDMtYTQ1Ni00MjY2MTQxNzQwMDAiLCJzZXNzaW9uSWQiOiJmODU0ZDFkZS1hYTgyLTQ3MzItYTNmMC1iZGNjNDFmZDQ0OWEiLCJ0eXBlIjoicmVmcmVzaCIsImlhdCI6MTc1NjE3NjY4NywiZXhwIjoxNzU2NzgxNDg3LCJhdWQiOiJtYWludGFpbnByby1hcHAiLCJpc3MiOiJtYWludGFpbnByby1jbW1zIn0.iOOTUgcgEROamrJFhJGjgA4G--HD8veNy-A1_IvcNC8","sessionId":"f854d1de-aa82-4732-a3f0-bdcc41fd449a"}
✅ Login successful
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="debug-login.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="2.749" errors="0">
<testcase name="debug login error handling" classname="debug-login.spec.ts" time="2.749">
<system-out>
<![CDATA[Page content after login attempt: <!DOCTYPE html><html lang="en"><head>
    <script type="module">import { injectIntoGlobalHook } from "/@react-refresh";
injectIntoGlobalHook(window);
window.$RefreshReg$ = () => {};
window.$RefreshSig$ = () => (type) => type;</script>

    <script type="module" src="/@vite/client"></script>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=no">
    <title>MaintainPro CMMS</title>

    <!-- PWA Meta Tags -->
    <meta name="description" content="Enterprise Maintenance Management System for industrial operations">
    <meta name="theme-color" content="#2563eb">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="MaintainPro">
    <meta name="msapplication-TileColor" content="#2563eb">
    <meta name="msapplication-config" content="/browserconfig.xml">

    <!-- Manifest -->
    <link rel="manifest" href="/manifest.json">

    <!-- Icons -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="apple-touch-icon" sizes="180x180" href="/icon-192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">

    <!-- Preconnect for performance -->
    <link rel="preconnect" href="/api">
    <link rel="dns-prefetch" href="/api">

    <!-- Security Headers removed - handled by server middleware -->
  <style type="text/css" data-vite-dev-id="/workspaces/MaintAInPro/client/src/index.css">*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: var(--border); /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}
  body {
    font-family: 'Inter', system-ui, sans-serif;
    background-color: var(--background);
    color: var(--foreground);
  }

  /* body styling moved above */
.container {
  width: 100%;
}
@media (min-width: 640px) {

  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
  }
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.pointer-events-none {
  pointer-events: none;
}
.pointer-events-auto {
  pointer-events: auto;
}
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}
.static {
  position: static;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.inset-0 {
  inset: 0px;
}
.inset-x-0 {
  left: 0px;
  right: 0px;
}
.inset-y-0 {
  top: 0px;
  bottom: 0px;
}
.-bottom-12 {
  bottom: -3rem;
}
.-left-12 {
  left: -3rem;
}
.-right-1 {
  right: -0.25rem;
}
.-right-12 {
  right: -3rem;
}
.-top-1 {
  top: -0.25rem;
}
.-top-12 {
  top: -3rem;
}
.bottom-0 {
  bottom: 0px;
}
.bottom-4 {
  bottom: 1rem;
}
.left-0 {
  left: 0px;
}
.left-1 {
  left: 0.25rem;
}
.left-1\/2 {
  left: 50%;
}
.left-2 {
  left: 0.5rem;
}
.left-3 {
  left: 0.75rem;
}
.left-4 {
  left: 1rem;
}
.left-\[50\%\] {
  left: 50%;
}
.right-0 {
  right: 0px;
}
.right-1 {
  right: 0.25rem;
}
.right-2 {
  right: 0.5rem;
}
.right-3 {
  right: 0.75rem;
}
.right-4 {
  right: 1rem;
}
.top-0 {
  top: 0px;
}
.top-1\.5 {
  top: 0.375rem;
}
.top-1\/2 {
  top: 50%;
}
.top-2 {
  top: 0.5rem;
}
.top-2\.5 {
  top: 0.625rem;
}
.top-3 {
  top: 0.75rem;
}
.top-3\.5 {
  top: 0.875rem;
}
.top-4 {
  top: 1rem;
}
.top-\[1px\] {
  top: 1px;
}
.top-\[50\%\] {
  top: 50%;
}
.top-\[60\%\] {
  top: 60%;
}
.top-full {
  top: 100%;
}
.isolate {
  isolation: isolate;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.z-\[100\] {
  z-index: 100;
}
.z-\[1\] {
  z-index: 1;
}
.col-span-full {
  grid-column: 1 / -1;
}
.-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}
.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mx-3\.5 {
  margin-left: 0.875rem;
  margin-right: 0.875rem;
}
.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.my-0\.5 {
  margin-top: 0.125rem;
  margin-bottom: 0.125rem;
}
.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.-ml-4 {
  margin-left: -1rem;
}
.-mt-4 {
  margin-top: -1rem;
}
.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.ml-1 {
  margin-left: 0.25rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.ml-3 {
  margin-left: 0.75rem;
}
.ml-7 {
  margin-left: 1.75rem;
}
.ml-auto {
  margin-left: auto;
}
.mr-1 {
  margin-right: 0.25rem;
}
.mr-2 {
  margin-right: 0.5rem;
}
.mt-0\.5 {
  margin-top: 0.125rem;
}
.mt-1 {
  margin-top: 0.25rem;
}
.mt-1\.5 {
  margin-top: 0.375rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-24 {
  margin-top: 6rem;
}
.mt-3 {
  margin-top: 0.75rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-6 {
  margin-top: 1.5rem;
}
.mt-8 {
  margin-top: 2rem;
}
.mt-auto {
  margin-top: auto;
}
.block {
  display: block;
}
.inline {
  display: inline;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.aspect-video {
  aspect-ratio: 16 / 9;
}
.size-4 {
  width: 1rem;
  height: 1rem;
}
.h-1 {
  height: 0.25rem;
}
.h-1\.5 {
  height: 0.375rem;
}
.h-10 {
  height: 2.5rem;
}
.h-11 {
  height: 2.75rem;
}
.h-12 {
  height: 3rem;
}
.h-16 {
  height: 4rem;
}
.h-2 {
  height: 0.5rem;
}
.h-2\.5 {
  height: 0.625rem;
}
.h-20 {
  height: 5rem;
}
.h-24 {
  height: 6rem;
}
.h-3 {
  height: 0.75rem;
}
.h-3\.5 {
  height: 0.875rem;
}
.h-32 {
  height: 8rem;
}
.h-4 {
  height: 1rem;
}
.h-48 {
  height: 12rem;
}
.h-5 {
  height: 1.25rem;
}
.h-6 {
  height: 1.5rem;
}
.h-64 {
  height: 16rem;
}
.h-7 {
  height: 1.75rem;
}
.h-8 {
  height: 2rem;
}
.h-9 {
  height: 2.25rem;
}
.h-96 {
  height: 24rem;
}
.h-\[1px\] {
  height: 1px;
}
.h-\[var\(--radix-navigation-menu-viewport-height\)\] {
  height: var(--radix-navigation-menu-viewport-height);
}
.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-px {
  height: 1px;
}
.h-screen {
  height: 100vh;
}
.h-svh {
  height: 100svh;
}
.max-h-32 {
  max-height: 8rem;
}
.max-h-64 {
  max-height: 16rem;
}
.max-h-96 {
  max-height: 24rem;
}
.max-h-\[--radix-context-menu-content-available-height\] {
  max-height: var(--radix-context-menu-content-available-height);
}
.max-h-\[--radix-select-content-available-height\] {
  max-height: var(--radix-select-content-available-height);
}
.max-h-\[300px\] {
  max-height: 300px;
}
.max-h-\[80vh\] {
  max-height: 80vh;
}
.max-h-\[90vh\] {
  max-height: 90vh;
}
.max-h-\[var\(--radix-dropdown-menu-content-available-height\)\] {
  max-height: var(--radix-dropdown-menu-content-available-height);
}
.max-h-screen {
  max-height: 100vh;
}
.min-h-0 {
  min-height: 0px;
}
.min-h-24 {
  min-height: 6rem;
}
.min-h-\[200px\] {
  min-height: 200px;
}
.min-h-\[400px\] {
  min-height: 400px;
}
.min-h-\[80px\] {
  min-height: 80px;
}
.min-h-screen {
  min-height: 100vh;
}
.min-h-svh {
  min-height: 100svh;
}
.w-0 {
  width: 0px;
}
.w-1 {
  width: 0.25rem;
}
.w-1\/2 {
  width: 50%;
}
.w-10 {
  width: 2.5rem;
}
.w-11 {
  width: 2.75rem;
}
.w-12 {
  width: 3rem;
}
.w-16 {
  width: 4rem;
}
.w-2 {
  width: 0.5rem;
}
.w-2\.5 {
  width: 0.625rem;
}
.w-2\/3 {
  width: 66.666667%;
}
.w-20 {
  width: 5rem;
}
.w-24 {
  width: 6rem;
}
.w-3 {
  width: 0.75rem;
}
.w-3\.5 {
  width: 0.875rem;
}
.w-3\/4 {
  width: 75%;
}
.w-32 {
  width: 8rem;
}
.w-4 {
  width: 1rem;
}
.w-40 {
  width: 10rem;
}
.w-48 {
  width: 12rem;
}
.w-5 {
  width: 1.25rem;
}
.w-6 {
  width: 1.5rem;
}
.w-64 {
  width: 16rem;
}
.w-7 {
  width: 1.75rem;
}
.w-72 {
  width: 18rem;
}
.w-8 {
  width: 2rem;
}
.w-80 {
  width: 20rem;
}
.w-9 {
  width: 2.25rem;
}
.w-\[--sidebar-width\] {
  width: var(--sidebar-width);
}
.w-\[100px\] {
  width: 100px;
}
.w-\[1px\] {
  width: 1px;
}
.w-auto {
  width: auto;
}
.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}
.w-full {
  width: 100%;
}
.w-max {
  width: -moz-max-content;
  width: max-content;
}
.w-px {
  width: 1px;
}
.min-w-0 {
  min-width: 0px;
}
.min-w-10 {
  min-width: 2.5rem;
}
.min-w-11 {
  min-width: 2.75rem;
}
.min-w-5 {
  min-width: 1.25rem;
}
.min-w-9 {
  min-width: 2.25rem;
}
.min-w-\[12rem\] {
  min-width: 12rem;
}
.min-w-\[8rem\] {
  min-width: 8rem;
}
.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}
.max-w-2xl {
  max-width: 42rem;
}
.max-w-4xl {
  max-width: 56rem;
}
.max-w-\[--skeleton-width\] {
  max-width: var(--skeleton-width);
}
.max-w-full {
  max-width: 100%;
}
.max-w-lg {
  max-width: 32rem;
}
.max-w-max {
  max-width: -moz-max-content;
  max-width: max-content;
}
.max-w-md {
  max-width: 28rem;
}
.flex-1 {
  flex: 1 1 0%;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.shrink-0 {
  flex-shrink: 0;
}
.grow {
  flex-grow: 1;
}
.grow-0 {
  flex-grow: 0;
}
.basis-full {
  flex-basis: 100%;
}
.caption-bottom {
  caption-side: bottom;
}
.border-collapse {
  border-collapse: collapse;
}
.origin-\[--radix-context-menu-content-transform-origin\] {
  transform-origin: var(--radix-context-menu-content-transform-origin);
}
.origin-\[--radix-dropdown-menu-content-transform-origin\] {
  transform-origin: var(--radix-dropdown-menu-content-transform-origin);
}
.origin-\[--radix-hover-card-content-transform-origin\] {
  transform-origin: var(--radix-hover-card-content-transform-origin);
}
.origin-\[--radix-menubar-content-transform-origin\] {
  transform-origin: var(--radix-menubar-content-transform-origin);
}
.origin-\[--radix-popover-content-transform-origin\] {
  transform-origin: var(--radix-popover-content-transform-origin);
}
.origin-\[--radix-select-content-transform-origin\] {
  transform-origin: var(--radix-select-content-transform-origin);
}
.origin-\[--radix-tooltip-content-transform-origin\] {
  transform-origin: var(--radix-tooltip-content-transform-origin);
}
.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-x-px {
  --tw-translate-x: -1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-px {
  --tw-translate-x: 1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes pulse {

  50% {
    opacity: .5;
  }
}
.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes spin {

  to {
    transform: rotate(360deg);
  }
}
.animate-spin {
  animation: spin 1s linear infinite;
}
.cursor-default {
  cursor: default;
}
.cursor-not-allowed {
  cursor: not-allowed;
}
.cursor-pointer {
  cursor: pointer;
}
.touch-none {
  touch-action: none;
}
.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.resize {
  resize: both;
}
.list-inside {
  list-style-position: inside;
}
.list-disc {
  list-style-type: disc;
}
.list-none {
  list-style-type: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr));
}
.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-start {
  align-items: flex-start;
}
.items-end {
  align-items: flex-end;
}
.items-center {
  align-items: center;
}
.items-stretch {
  align-items: stretch;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.gap-1 {
  gap: 0.25rem;
}
.gap-1\.5 {
  gap: 0.375rem;
}
.gap-2 {
  gap: 0.5rem;
}
.gap-3 {
  gap: 0.75rem;
}
.gap-4 {
  gap: 1rem;
}
.gap-6 {
  gap: 1.5rem;
}
.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-y-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
}
.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}
.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.whitespace-pre-wrap {
  white-space: pre-wrap;
}
.break-words {
  overflow-wrap: break-word;
}
.break-all {
  word-break: break-all;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-\[2px\] {
  border-radius: 2px;
}
.rounded-\[inherit\] {
  border-radius: inherit;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-lg {
  border-radius: var(--radius);
}
.rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
.rounded-none {
  border-radius: 0px;
}
.rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-t-\[10px\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}
.rounded-tl-sm {
  border-top-left-radius: calc(var(--radius) - 4px);
}
.border {
  border-width: 1px;
}
.border-0 {
  border-width: 0px;
}
.border-2 {
  border-width: 2px;
}
.border-\[1\.5px\] {
  border-width: 1.5px;
}
.border-x-0 {
  border-left-width: 0px;
  border-right-width: 0px;
}
.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-b-0 {
  border-bottom-width: 0px;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.border-b-4 {
  border-bottom-width: 4px;
}
.border-l {
  border-left-width: 1px;
}
.border-l-2 {
  border-left-width: 2px;
}
.border-l-4 {
  border-left-width: 4px;
}
.border-r {
  border-right-width: 1px;
}
.border-r-4 {
  border-right-width: 4px;
}
.border-t {
  border-top-width: 1px;
}
.border-t-0 {
  border-top-width: 0px;
}
.border-t-4 {
  border-top-width: 4px;
}
.border-dashed {
  border-style: dashed;
}
.border-\[--color-border\] {
  border-color: var(--color-border);
}
.border-\[var\(--border\)\/50\] {
  border-color: var(--border)/50;
}
.border-blue-200 {
  --tw-border-opacity: 1;
  border-color: rgb(191 219 254 / var(--tw-border-opacity, 1));
}
.border-blue-300 {
  --tw-border-opacity: 1;
  border-color: rgb(147 197 253 / var(--tw-border-opacity, 1));
}
.border-blue-500 {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity, 1));
}
.border-blue-600 {
  --tw-border-opacity: 1;
  border-color: rgb(37 99 235 / var(--tw-border-opacity, 1));
}
.border-destructive {
  border-color: var(--destructive);
}
.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity, 1));
}
.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}
.border-gray-500 {
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity, 1));
}
.border-green-200 {
  --tw-border-opacity: 1;
  border-color: rgb(187 247 208 / var(--tw-border-opacity, 1));
}
.border-green-300 {
  --tw-border-opacity: 1;
  border-color: rgb(134 239 172 / var(--tw-border-opacity, 1));
}
.border-green-500 {
  --tw-border-opacity: 1;
  border-color: rgb(34 197 94 / var(--tw-border-opacity, 1));
}
.border-input {
  border-color: var(--input);
}
.border-muted {
  border-color: var(--muted);
}
.border-orange-200 {
  --tw-border-opacity: 1;
  border-color: rgb(254 215 170 / var(--tw-border-opacity, 1));
}
.border-primary {
  border-color: var(--primary);
}
.border-purple-200 {
  --tw-border-opacity: 1;
  border-color: rgb(233 213 255 / var(--tw-border-opacity, 1));
}
.border-red-200 {
  --tw-border-opacity: 1;
  border-color: rgb(254 202 202 / var(--tw-border-opacity, 1));
}
.border-red-300 {
  --tw-border-opacity: 1;
  border-color: rgb(252 165 165 / var(--tw-border-opacity, 1));
}
.border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(239 68 68 / var(--tw-border-opacity, 1));
}
.border-teal-200 {
  --tw-border-opacity: 1;
  border-color: rgb(153 246 228 / var(--tw-border-opacity, 1));
}
.border-transparent {
  border-color: transparent;
}
.border-white\/30 {
  border-color: rgb(255 255 255 / 0.3);
}
.border-yellow-200 {
  --tw-border-opacity: 1;
  border-color: rgb(254 240 138 / var(--tw-border-opacity, 1));
}
.border-yellow-300 {
  --tw-border-opacity: 1;
  border-color: rgb(253 224 71 / var(--tw-border-opacity, 1));
}
.border-l-blue-500 {
  --tw-border-opacity: 1;
  border-left-color: rgb(59 130 246 / var(--tw-border-opacity, 1));
}
.border-l-orange-500 {
  --tw-border-opacity: 1;
  border-left-color: rgb(249 115 22 / var(--tw-border-opacity, 1));
}
.border-l-transparent {
  border-left-color: transparent;
}
.border-t-transparent {
  border-top-color: transparent;
}
.bg-\[--color-bg\] {
  background-color: var(--color-bg);
}
.bg-accent {
  background-color: var(--accent);
}
.bg-background {
  background-color: var(--background);
}
.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}
.bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}
.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
}
.bg-blue-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity, 1));
}
.bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity, 1));
}
.bg-blue-50\/50 {
  background-color: rgb(239 246 255 / 0.5);
}
.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity, 1));
}
.bg-border {
  background-color: var(--border);
}
.bg-card {
  background-color: var(--card);
}
.bg-destructive {
  background-color: var(--destructive);
}
.bg-emerald-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity, 1));
}
.bg-foreground {
  background-color: var(--foreground);
}
.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}
.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));
}
.bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity, 1));
}
.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}
.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));
}
.bg-green-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity, 1));
}
.bg-green-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(74 222 128 / var(--tw-bg-opacity, 1));
}
.bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));
}
.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));
}
.bg-green-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity, 1));
}
.bg-indigo-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(99 102 241 / var(--tw-bg-opacity, 1));
}
.bg-muted {
  background-color: var(--muted);
}
.bg-orange-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 237 213 / var(--tw-bg-opacity, 1));
}
.bg-orange-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 215 170 / var(--tw-bg-opacity, 1));
}
.bg-orange-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 247 237 / var(--tw-bg-opacity, 1));
}
.bg-popover {
  background-color: var(--popover);
}
.bg-primary {
  background-color: var(--primary);
}
.bg-purple-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 232 255 / var(--tw-bg-opacity, 1));
}
.bg-purple-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(233 213 255 / var(--tw-bg-opacity, 1));
}
.bg-purple-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 245 255 / var(--tw-bg-opacity, 1));
}
.bg-purple-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(168 85 247 / var(--tw-bg-opacity, 1));
}
.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}
.bg-red-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 242 242 / var(--tw-bg-opacity, 1));
}
.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}
.bg-secondary {
  background-color: var(--secondary);
}
.bg-sidebar {
  background-color: var(--sidebar-background);
}
.bg-sidebar-border {
  background-color: var(--sidebar-border);
}
.bg-teal-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(153 246 228 / var(--tw-bg-opacity, 1));
}
.bg-transparent {
  background-color: transparent;
}
.bg-violet-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(139 92 246 / var(--tw-bg-opacity, 1));
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}
.bg-white\/20 {
  background-color: rgb(255 255 255 / 0.2);
}
.bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
}
.bg-yellow-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 252 232 / var(--tw-bg-opacity, 1));
}
.bg-opacity-10 {
  --tw-bg-opacity: 0.1;
}
.bg-opacity-50 {
  --tw-bg-opacity: 0.5;
}
.bg-opacity-70 {
  --tw-bg-opacity: 0.7;
}
.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}
.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-blue-50 {
  --tw-gradient-from: #eff6ff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(239 246 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-blue-600 {
  --tw-gradient-from: #2563eb var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(37 99 235 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-emerald-600 {
  --tw-gradient-from: #059669 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(5 150 105 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-green-100 {
  --tw-gradient-from: #dcfce7 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(220 252 231 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-green-50 {
  --tw-gradient-from: #f0fdf4 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(240 253 244 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-orange-50 {
  --tw-gradient-from: #fff7ed var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 247 237 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-purple-50 {
  --tw-gradient-from: #faf5ff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(250 245 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-teal-50 {
  --tw-gradient-from: #f0fdfa var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(240 253 250 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-violet-600 {
  --tw-gradient-from: #7c3aed var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(124 58 237 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.via-blue-600 {
  --tw-gradient-to: rgb(37 99 235 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #2563eb var(--tw-gradient-via-position), var(--tw-gradient-to);
}
.via-indigo-600 {
  --tw-gradient-to: rgb(79 70 229 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #4f46e5 var(--tw-gradient-via-position), var(--tw-gradient-to);
}
.to-blue-100 {
  --tw-gradient-to: #dbeafe var(--tw-gradient-to-position);
}
.to-blue-50 {
  --tw-gradient-to: #eff6ff var(--tw-gradient-to-position);
}
.to-blue-600 {
  --tw-gradient-to: #2563eb var(--tw-gradient-to-position);
}
.to-emerald-50 {
  --tw-gradient-to: #ecfdf5 var(--tw-gradient-to-position);
}
.to-orange-50 {
  --tw-gradient-to: #fff7ed var(--tw-gradient-to-position);
}
.to-purple-50 {
  --tw-gradient-to: #faf5ff var(--tw-gradient-to-position);
}
.to-purple-600 {
  --tw-gradient-to: #9333ea var(--tw-gradient-to-position);
}
.to-teal-50 {
  --tw-gradient-to: #f0fdfa var(--tw-gradient-to-position);
}
.fill-current {
  fill: currentColor;
}
.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}
.p-0 {
  padding: 0px;
}
.p-1 {
  padding: 0.25rem;
}
.p-2 {
  padding: 0.5rem;
}
.p-3 {
  padding: 0.75rem;
}
.p-4 {
  padding: 1rem;
}
.p-6 {
  padding: 1.5rem;
}
.p-8 {
  padding: 2rem;
}
.p-\[1px\] {
  padding: 1px;
}
.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.pb-2 {
  padding-bottom: 0.5rem;
}
.pb-3 {
  padding-bottom: 0.75rem;
}
.pb-4 {
  padding-bottom: 1rem;
}
.pl-10 {
  padding-left: 2.5rem;
}
.pl-2\.5 {
  padding-left: 0.625rem;
}
.pl-4 {
  padding-left: 1rem;
}
.pl-8 {
  padding-left: 2rem;
}
.pr-10 {
  padding-right: 2.5rem;
}
.pr-2 {
  padding-right: 0.5rem;
}
.pr-2\.5 {
  padding-right: 0.625rem;
}
.pr-3 {
  padding-right: 0.75rem;
}
.pr-8 {
  padding-right: 2rem;
}
.pt-0 {
  padding-top: 0px;
}
.pt-1 {
  padding-top: 0.25rem;
}
.pt-2 {
  padding-top: 0.5rem;
}
.pt-3 {
  padding-top: 0.75rem;
}
.pt-4 {
  padding-top: 1rem;
}
.pt-6 {
  padding-top: 1.5rem;
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.align-middle {
  vertical-align: middle;
}
.font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-\[0\.8rem\] {
  font-size: 0.8rem;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.font-bold {
  font-weight: 700;
}
.font-medium {
  font-weight: 500;
}
.font-normal {
  font-weight: 400;
}
.font-semibold {
  font-weight: 600;
}
.uppercase {
  text-transform: uppercase;
}
.capitalize {
  text-transform: capitalize;
}
.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}
.leading-4 {
  line-height: 1rem;
}
.leading-none {
  line-height: 1;
}
.leading-relaxed {
  line-height: 1.625;
}
.tracking-tight {
  letter-spacing: -0.025em;
}
.tracking-widest {
  letter-spacing: 0.1em;
}
.text-accent-foreground {
  color: var(--accent-foreground);
}
.text-amber-600 {
  --tw-text-opacity: 1;
  color: rgb(217 119 6 / var(--tw-text-opacity, 1));
}
.text-blue-100 {
  --tw-text-opacity: 1;
  color: rgb(219 234 254 / var(--tw-text-opacity, 1));
}
.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity, 1));
}
.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}
.text-blue-700 {
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity, 1));
}
.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity, 1));
}
.text-blue-900 {
  --tw-text-opacity: 1;
  color: rgb(30 58 138 / var(--tw-text-opacity, 1));
}
.text-card-foreground {
  color: var(--card-foreground);
}
.text-current {
  color: currentColor;
}
.text-destructive {
  color: var(--destructive);
}
.text-destructive-foreground {
  color: var(--destructive-foreground);
}
.text-emerald-600 {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity, 1));
}
.text-foreground {
  color: var(--foreground);
}
.text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity, 1));
}
.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity, 1));
}
.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}
.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}
.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}
.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}
.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}
.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity, 1));
}
.text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
}
.text-green-700 {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity, 1));
}
.text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity, 1));
}
.text-green-900 {
  --tw-text-opacity: 1;
  color: rgb(20 83 45 / var(--tw-text-opacity, 1));
}
.text-indigo-600 {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity, 1));
}
.text-muted-foreground {
  color: var(--muted-foreground);
}
.text-orange-500 {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity, 1));
}
.text-orange-600 {
  --tw-text-opacity: 1;
  color: rgb(234 88 12 / var(--tw-text-opacity, 1));
}
.text-orange-700 {
  --tw-text-opacity: 1;
  color: rgb(194 65 12 / var(--tw-text-opacity, 1));
}
.text-orange-800 {
  --tw-text-opacity: 1;
  color: rgb(154 52 18 / var(--tw-text-opacity, 1));
}
.text-popover-foreground {
  color: var(--popover-foreground);
}
.text-primary {
  color: var(--primary);
}
.text-primary-foreground {
  color: var(--primary-foreground);
}
.text-purple-600 {
  --tw-text-opacity: 1;
  color: rgb(147 51 234 / var(--tw-text-opacity, 1));
}
.text-purple-700 {
  --tw-text-opacity: 1;
  color: rgb(126 34 206 / var(--tw-text-opacity, 1));
}
.text-purple-800 {
  --tw-text-opacity: 1;
  color: rgb(107 33 168 / var(--tw-text-opacity, 1));
}
.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}
.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}
.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}
.text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity, 1));
}
.text-secondary-foreground {
  color: var(--secondary-foreground);
}
.text-sidebar-foreground {
  color: var(--sidebar-foreground);
}
.text-teal-600 {
  --tw-text-opacity: 1;
  color: rgb(13 148 136 / var(--tw-text-opacity, 1));
}
.text-teal-700 {
  --tw-text-opacity: 1;
  color: rgb(15 118 110 / var(--tw-text-opacity, 1));
}
.text-teal-800 {
  --tw-text-opacity: 1;
  color: rgb(17 94 89 / var(--tw-text-opacity, 1));
}
.text-violet-100 {
  --tw-text-opacity: 1;
  color: rgb(237 233 254 / var(--tw-text-opacity, 1));
}
.text-violet-600 {
  --tw-text-opacity: 1;
  color: rgb(124 58 237 / var(--tw-text-opacity, 1));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}
.text-yellow-500 {
  --tw-text-opacity: 1;
  color: rgb(234 179 8 / var(--tw-text-opacity, 1));
}
.text-yellow-600 {
  --tw-text-opacity: 1;
  color: rgb(202 138 4 / var(--tw-text-opacity, 1));
}
.text-yellow-700 {
  --tw-text-opacity: 1;
  color: rgb(161 98 7 / var(--tw-text-opacity, 1));
}
.text-yellow-800 {
  --tw-text-opacity: 1;
  color: rgb(133 77 14 / var(--tw-text-opacity, 1));
}
.underline-offset-4 {
  text-underline-offset: 4px;
}
.opacity-0 {
  opacity: 0;
}
.opacity-50 {
  opacity: 0.5;
}
.opacity-60 {
  opacity: 0.6;
}
.opacity-70 {
  opacity: 0.7;
}
.opacity-80 {
  opacity: 0.8;
}
.opacity-90 {
  opacity: 0.9;
}
.shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\] {
  --tw-shadow: 0 0 0 1px hsl(var(--sidebar-border));
  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-none {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.outline {
  outline-style: solid;
}
.ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-2 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-blue-500 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));
}
.ring-ring {
  --tw-ring-color: var(--ring);
}
.ring-sidebar-ring {
  --tw-ring-color: var(--sidebar-ring);
}
.ring-offset-background {
  --tw-ring-offset-color: var(--background);
}
.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[left\2c right\2c width\] {
  transition-property: left,right,width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[margin\2c opacity\] {
  transition-property: margin,opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[width\2c height\2c padding\] {
  transition-property: width,height,padding;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[width\] {
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-1000 {
  transition-duration: 1000ms;
}
.duration-200 {
  transition-duration: 200ms;
}
.duration-300 {
  transition-duration: 300ms;
}
.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-linear {
  transition-timing-function: linear;
}
@keyframes enter {

  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {

  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
.animate-in {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.fade-in-0 {
  --tw-enter-opacity: 0;
}
.fade-in-80 {
  --tw-enter-opacity: 0.8;
}
.zoom-in-95 {
  --tw-enter-scale: .95;
}
.duration-1000 {
  animation-duration: 1000ms;
}
.duration-200 {
  animation-duration: 200ms;
}
.duration-300 {
  animation-duration: 300ms;
}
.ease-in-out {
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-linear {
  animation-timing-function: linear;
}
.running {
  animation-play-state: running;
}
.bg-primary-50 {
    background-color: var(--primary-50);
  }
.bg-primary-100 {
    background-color: var(--primary-100);
  }
.bg-primary-500 {
    background-color: var(--primary-500);
  }
.bg-primary-600 {
    background-color: var(--primary-600);
  }
.text-primary-600 {
    color: var(--primary-600);
  }
.text-primary-700 {
    color: var(--primary-700);
  }
.bg-success-50 {
    background-color: var(--success-50);
  }
.bg-success-500 {
    background-color: var(--success-500);
  }
.text-success-600 {
    color: var(--success-600);
  }
.bg-warning-50 {
    background-color: var(--warning-50);
  }
.bg-warning-500 {
    background-color: var(--warning-500);
  }
.text-warning-600 {
    color: var(--warning-600);
  }
.text-warning-800 {
    color: hsl(25, 95%, 39%);
  }
.bg-error-50 {
    background-color: var(--error-50);
  }
.bg-error-500 {
    background-color: var(--error-500);
  }
.text-error-600 {
    color: var(--error-600);
  }
.text-error-800 {
    color: hsl(0, 70%, 35%);
  }
.border-warning-200 {
    border-color: hsl(48, 96%, 76%);
  }
.border-error-200 {
    border-color: hsl(0, 93%, 76%);
  }

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(20, 14.3%, 4.1%);
  --muted: hsl(60, 4.8%, 95.9%);
  --muted-foreground: hsl(25, 5.3%, 44.7%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(20, 14.3%, 4.1%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(20, 14.3%, 4.1%);
  --border: hsl(20, 5.9%, 90%);
  --input: hsl(20, 5.9%, 90%);
  --primary: hsl(207, 90%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(60, 4.8%, 95.9%);
  --secondary-foreground: hsl(24, 9.8%, 10%);
  --accent: hsl(60, 4.8%, 95.9%);
  --accent-foreground: hsl(24, 9.8%, 10%);
  --destructive: hsl(0, 84.2%, 60.2%);
  --destructive-foreground: hsl(60, 9.1%, 97.8%);
  --ring: hsl(20, 14.3%, 4.1%);
  --radius: 0.5rem;

  /* CMMS Specific Colors */
  --primary-50: hsl(207, 100%, 97%);
  --primary-100: hsl(207, 95%, 92%);
  --primary-500: hsl(207, 90%, 54%);
  --primary-600: hsl(207, 90%, 47%);
  --primary-700: hsl(207, 89%, 38%);
  --primary-900: hsl(207, 89%, 25%);

  --success-50: hsl(142, 76%, 95%);
  --success-100: hsl(141, 84%, 87%);
  --success-500: hsl(142, 71%, 45%);
  --success-600: hsl(142, 76%, 36%);

  --warning-50: hsl(48, 100%, 96%);
  --warning-100: hsl(48, 96%, 89%);
  --warning-500: hsl(43, 96%, 56%);
  --warning-600: hsl(32, 95%, 44%);

  --error-50: hsl(0, 86%, 97%);
  --error-100: hsl(0, 93%, 94%);
  --error-500: hsl(0, 84%, 60%);
  --error-600: hsl(0, 72%, 51%);
}

.dark {
  --background: hsl(240, 10%, 3.9%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(240, 3.7%, 15.9%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(240, 10%, 3.9%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(240, 10%, 3.9%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --primary: hsl(207, 90%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(240, 3.7%, 15.9%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(240, 3.7%, 15.9%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 4.9%, 83.9%);
  --radius: 0.5rem;
}

/* Mobile-first responsive utilities */

/* PWA and offline indicators */
.offline-indicator {
  background: linear-gradient(45deg, #f59e0b, #d97706);
  animation: pulse 2s infinite;
}

/* QR Scanner overlay */
.qr-scanner-overlay {
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(4px);
}

.qr-scanner-viewfinder {
  border: 2px solid var(--primary-500);
  box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);
}

/* Loading states */
.loading-skeleton {
  animation: pulse 2s infinite;
  background-color: #e5e7eb;
  border-radius: 0.5rem;
}

/* Status indicators */
.status-new {
  background-color: #dbeafe;
  color: #1e40af;
}

.status-assigned {
  background-color: #fef9c3;
  color: #b45309;
}

.status-in-progress {
  background-color: #ffedd5;
  color: #c2410c;
}

.status-completed {
  background-color: #d1fae5;
  color: #065f46;
}

.status-verified {
  background-color: #ede9fe;
  color: #6d28d9;
}

.status-closed {
  background-color: #f3f4f6;
  color: #1f2937;
}

/* Priority indicators */
.priority-low {
  background-color: #d1fae5;
  color: #065f46;
}

.priority-medium {
  background-color: #fef9c3;
  color: #b45309;
}

.priority-high {
  background-color: #ffedd5;
  color: #c2410c;
}

.priority-critical {
  background-color: #fee2e2;
  color: #991b1b;
}

/* Equipment status indicators */
.equipment-active {
  background-color: #d1fae5;
  color: #065f46;
}

.equipment-inactive {
  background-color: #f3f4f6;
  color: #1f2937;
}

.equipment-maintenance {
  background-color: #fef9c3;
  color: #b45309;
}

.equipment-retired {
  background-color: #fee2e2;
  color: #991b1b;
}

.file\:border-0::file-selector-button {
  border-width: 0px;
}

.file\:bg-transparent::file-selector-button {
  background-color: transparent;
}

.file\:text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.file\:font-medium::file-selector-button {
  font-weight: 500;
}

.file\:text-foreground::file-selector-button {
  color: var(--foreground);
}

.placeholder\:text-muted-foreground::-moz-placeholder {
  color: var(--muted-foreground);
}

.placeholder\:text-muted-foreground::placeholder {
  color: var(--muted-foreground);
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:-inset-2::after {
  content: var(--tw-content);
  inset: -0.5rem;
}

.after\:inset-y-0::after {
  content: var(--tw-content);
  top: 0px;
  bottom: 0px;
}

.after\:left-1\/2::after {
  content: var(--tw-content);
  left: 50%;
}

.after\:w-1::after {
  content: var(--tw-content);
  width: 0.25rem;
}

.after\:w-\[2px\]::after {
  content: var(--tw-content);
  width: 2px;
}

.after\:-translate-x-1\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.first\:rounded-l-md:first-child {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}

.first\:border-l:first-child {
  border-left-width: 1px;
}

.last\:rounded-r-md:last-child {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.last\:border-b-0:last-child {
  border-bottom-width: 0px;
}

.focus-within\:relative:focus-within {
  position: relative;
}

.focus-within\:z-20:focus-within {
  z-index: 20;
}

.hover\:border-solid:hover {
  border-style: solid;
}

.hover\:border-gray-300:hover {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}

.hover\:bg-accent:hover {
  background-color: var(--accent);
}

.hover\:bg-blue-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}

.hover\:bg-green-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));
}

.hover\:bg-muted:hover {
  background-color: var(--muted);
}

.hover\:bg-primary:hover {
  background-color: var(--primary);
}

.hover\:bg-red-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 242 242 / var(--tw-bg-opacity, 1));
}

.hover\:bg-secondary:hover {
  background-color: var(--secondary);
}

.hover\:bg-sidebar-accent:hover {
  background-color: var(--sidebar-accent);
}

.hover\:bg-yellow-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 252 232 / var(--tw-bg-opacity, 1));
}

.hover\:text-accent-foreground:hover {
  color: var(--accent-foreground);
}

.hover\:text-destructive:hover {
  color: var(--destructive);
}

.hover\:text-foreground:hover {
  color: var(--foreground);
}

.hover\:text-gray-600:hover {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.hover\:text-gray-700:hover {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}

.hover\:text-muted-foreground:hover {
  color: var(--muted-foreground);
}

.hover\:text-primary-foreground:hover {
  color: var(--primary-foreground);
}

.hover\:text-red-700:hover {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}

.hover\:text-sidebar-accent-foreground:hover {
  color: var(--sidebar-accent-foreground);
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.hover\:opacity-100:hover {
  opacity: 1;
}

.hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\]:hover {
  --tw-shadow: 0 0 0 1px hsl(var(--sidebar-accent));
  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-md:hover {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:bg-primary-100:hover {
    background-color: var(--primary-100);
  }

.hover\:bg-primary-700:hover {
    background-color: var(--primary-700);
  }

.hover\:after\:bg-sidebar-border:hover::after {
  content: var(--tw-content);
  background-color: var(--sidebar-border);
}

.focus\:border-transparent:focus {
  border-color: transparent;
}

.focus\:bg-accent:focus {
  background-color: var(--accent);
}

.focus\:bg-primary:focus {
  background-color: var(--primary);
}

.focus\:text-accent-foreground:focus {
  color: var(--accent-foreground);
}

.focus\:text-primary-foreground:focus {
  color: var(--primary-foreground);
}

.focus\:opacity-100:focus {
  opacity: 1;
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-ring:focus {
  --tw-ring-color: var(--ring);
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: var(--ring);
}

.focus-visible\:ring-sidebar-ring:focus-visible {
  --tw-ring-color: var(--sidebar-ring);
}

.focus-visible\:ring-offset-1:focus-visible {
  --tw-ring-offset-width: 1px;
}

.focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}

.focus-visible\:ring-offset-background:focus-visible {
  --tw-ring-offset-color: var(--background);
}

.active\:bg-sidebar-accent:active {
  background-color: var(--sidebar-accent);
}

.active\:text-sidebar-accent-foreground:active {
  color: var(--sidebar-accent-foreground);
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.group\/menu-item:focus-within .group-focus-within\/menu-item\:opacity-100 {
  opacity: 1;
}

.group:hover .group-hover\:translate-x-1 {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group\/menu-item:hover .group-hover\/menu-item\:opacity-100 {
  opacity: 1;
}

.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}

.group.destructive .group-\[\.destructive\]\:text-red-300 {
  --tw-text-opacity: 1;
  color: rgb(252 165 165 / var(--tw-text-opacity, 1));
}

.group.destructive .group-\[\.destructive\]\:hover\:bg-destructive:hover {
  background-color: var(--destructive);
}

.group.destructive .group-\[\.destructive\]\:hover\:text-destructive-foreground:hover {
  color: var(--destructive-foreground);
}

.group.destructive .group-\[\.destructive\]\:hover\:text-red-50:hover {
  --tw-text-opacity: 1;
  color: rgb(254 242 242 / var(--tw-text-opacity, 1));
}

.group.destructive .group-\[\.destructive\]\:focus\:ring-destructive:focus {
  --tw-ring-color: var(--destructive);
}

.group.destructive .group-\[\.destructive\]\:focus\:ring-red-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(248 113 113 / var(--tw-ring-opacity, 1));
}

.group.destructive .group-\[\.destructive\]\:focus\:ring-offset-red-600:focus {
  --tw-ring-offset-color: #dc2626;
}

.peer\/menu-button:hover ~ .peer-hover\/menu-button\:text-sidebar-accent-foreground {
  color: var(--sidebar-accent-foreground);
}

.peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}

.peer:disabled ~ .peer-disabled\:opacity-70 {
  opacity: 0.7;
}

.has-\[\[data-variant\=inset\]\]\:bg-sidebar:has([data-variant=inset]) {
  background-color: var(--sidebar-background);
}

.has-\[\:disabled\]\:opacity-50:has(:disabled) {
  opacity: 0.5;
}

.group\/menu-item:has([data-sidebar=menu-action]) .group-has-\[\[data-sidebar\=menu-action\]\]\/menu-item\:pr-8 {
  padding-right: 2rem;
}

.aria-disabled\:pointer-events-none[aria-disabled="true"] {
  pointer-events: none;
}

.aria-disabled\:opacity-50[aria-disabled="true"] {
  opacity: 0.5;
}

.aria-selected\:bg-accent[aria-selected="true"] {
  background-color: var(--accent);
}

.aria-selected\:text-accent-foreground[aria-selected="true"] {
  color: var(--accent-foreground);
}

.aria-selected\:text-muted-foreground[aria-selected="true"] {
  color: var(--muted-foreground);
}

.aria-selected\:opacity-100[aria-selected="true"] {
  opacity: 1;
}

.data-\[disabled\=true\]\:pointer-events-none[data-disabled="true"] {
  pointer-events: none;
}

.data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}

.data-\[panel-group-direction\=vertical\]\:h-px[data-panel-group-direction="vertical"] {
  height: 1px;
}

.data-\[panel-group-direction\=vertical\]\:w-full[data-panel-group-direction="vertical"] {
  width: 100%;
}

.data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=left\]\:-translate-x-1[data-side="left"] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=right\]\:translate-x-1[data-side="right"] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=top\]\:-translate-y-1[data-side="top"] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[state\=checked\]\:translate-x-5[data-state="checked"] {
  --tw-translate-x: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[swipe\=cancel\]\:translate-x-0[data-swipe="cancel"] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\][data-swipe="end"] {
  --tw-translate-x: var(--radix-toast-swipe-end-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\][data-swipe="move"] {
  --tw-translate-x: var(--radix-toast-swipe-move-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes accordion-up {

  from {
    height: var(--radix-accordion-content-height);
  }

  to {
    height: 0;
  }
}

.data-\[state\=closed\]\:animate-accordion-up[data-state="closed"] {
  animation: accordion-up 0.2s ease-out;
}

@keyframes accordion-down {

  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height);
  }
}

.data-\[state\=open\]\:animate-accordion-down[data-state="open"] {
  animation: accordion-down 0.2s ease-out;
}

.data-\[panel-group-direction\=vertical\]\:flex-col[data-panel-group-direction="vertical"] {
  flex-direction: column;
}

.data-\[active\=true\]\:bg-sidebar-accent[data-active="true"] {
  background-color: var(--sidebar-accent);
}

.data-\[selected\=\'true\'\]\:bg-accent[data-selected='true'] {
  background-color: var(--accent);
}

.data-\[state\=active\]\:bg-background[data-state="active"] {
  background-color: var(--background);
}

.data-\[state\=checked\]\:bg-primary[data-state="checked"] {
  background-color: var(--primary);
}

.data-\[state\=on\]\:bg-accent[data-state="on"] {
  background-color: var(--accent);
}

.data-\[state\=open\]\:bg-accent[data-state="open"] {
  background-color: var(--accent);
}

.data-\[state\=open\]\:bg-secondary[data-state="open"] {
  background-color: var(--secondary);
}

.data-\[state\=selected\]\:bg-muted[data-state="selected"] {
  background-color: var(--muted);
}

.data-\[state\=unchecked\]\:bg-input[data-state="unchecked"] {
  background-color: var(--input);
}

.data-\[active\=true\]\:font-medium[data-active="true"] {
  font-weight: 500;
}

.data-\[active\=true\]\:text-sidebar-accent-foreground[data-active="true"] {
  color: var(--sidebar-accent-foreground);
}

.data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
  color: var(--muted-foreground);
}

.data-\[selected\=true\]\:text-accent-foreground[data-selected="true"] {
  color: var(--accent-foreground);
}

.data-\[state\=active\]\:text-foreground[data-state="active"] {
  color: var(--foreground);
}

.data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
  color: var(--primary-foreground);
}

.data-\[state\=on\]\:text-accent-foreground[data-state="on"] {
  color: var(--accent-foreground);
}

.data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
  color: var(--accent-foreground);
}

.data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
  color: var(--muted-foreground);
}

.data-\[disabled\=true\]\:opacity-50[data-disabled="true"] {
  opacity: 0.5;
}

.data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: 0.5;
}

.data-\[state\=open\]\:opacity-100[data-state="open"] {
  opacity: 1;
}

.data-\[state\=active\]\:shadow-sm[data-state="active"] {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.data-\[swipe\=move\]\:transition-none[data-swipe="move"] {
  transition-property: none;
}

.data-\[state\=closed\]\:duration-300[data-state="closed"] {
  transition-duration: 300ms;
}

.data-\[state\=open\]\:duration-500[data-state="open"] {
  transition-duration: 500ms;
}

.data-\[motion\^\=from-\]\:animate-in[data-motion^="from-"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[state\=open\]\:animate-in[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[state\=visible\]\:animate-in[data-state="visible"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[motion\^\=to-\]\:animate-out[data-motion^="to-"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[state\=closed\]\:animate-out[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[state\=hidden\]\:animate-out[data-state="hidden"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[swipe\=end\]\:animate-out[data-swipe="end"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[motion\^\=from-\]\:fade-in[data-motion^="from-"] {
  --tw-enter-opacity: 0;
}

.data-\[motion\^\=to-\]\:fade-out[data-motion^="to-"] {
  --tw-exit-opacity: 0;
}

.data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
  --tw-exit-opacity: 0;
}

.data-\[state\=closed\]\:fade-out-80[data-state="closed"] {
  --tw-exit-opacity: 0.8;
}

.data-\[state\=hidden\]\:fade-out[data-state="hidden"] {
  --tw-exit-opacity: 0;
}

.data-\[state\=open\]\:fade-in-0[data-state="open"] {
  --tw-enter-opacity: 0;
}

.data-\[state\=visible\]\:fade-in[data-state="visible"] {
  --tw-enter-opacity: 0;
}

.data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
  --tw-exit-scale: .95;
}

.data-\[state\=open\]\:zoom-in-90[data-state="open"] {
  --tw-enter-scale: .9;
}

.data-\[state\=open\]\:zoom-in-95[data-state="open"] {
  --tw-enter-scale: .95;
}

.data-\[motion\=from-end\]\:slide-in-from-right-52[data-motion="from-end"] {
  --tw-enter-translate-x: 13rem;
}

.data-\[motion\=from-start\]\:slide-in-from-left-52[data-motion="from-start"] {
  --tw-enter-translate-x: -13rem;
}

.data-\[motion\=to-end\]\:slide-out-to-right-52[data-motion="to-end"] {
  --tw-exit-translate-x: 13rem;
}

.data-\[motion\=to-start\]\:slide-out-to-left-52[data-motion="to-start"] {
  --tw-exit-translate-x: -13rem;
}

.data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
  --tw-enter-translate-y: -0.5rem;
}

.data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
  --tw-enter-translate-x: 0.5rem;
}

.data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
  --tw-enter-translate-x: -0.5rem;
}

.data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
  --tw-enter-translate-y: 0.5rem;
}

.data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"] {
  --tw-exit-translate-y: 100%;
}

.data-\[state\=closed\]\:slide-out-to-left[data-state="closed"] {
  --tw-exit-translate-x: -100%;
}

.data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state="closed"] {
  --tw-exit-translate-x: -50%;
}

.data-\[state\=closed\]\:slide-out-to-right[data-state="closed"] {
  --tw-exit-translate-x: 100%;
}

.data-\[state\=closed\]\:slide-out-to-right-full[data-state="closed"] {
  --tw-exit-translate-x: 100%;
}

.data-\[state\=closed\]\:slide-out-to-top[data-state="closed"] {
  --tw-exit-translate-y: -100%;
}

.data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state="closed"] {
  --tw-exit-translate-y: -48%;
}

.data-\[state\=open\]\:slide-in-from-bottom[data-state="open"] {
  --tw-enter-translate-y: 100%;
}

.data-\[state\=open\]\:slide-in-from-left[data-state="open"] {
  --tw-enter-translate-x: -100%;
}

.data-\[state\=open\]\:slide-in-from-left-1\/2[data-state="open"] {
  --tw-enter-translate-x: -50%;
}

.data-\[state\=open\]\:slide-in-from-right[data-state="open"] {
  --tw-enter-translate-x: 100%;
}

.data-\[state\=open\]\:slide-in-from-top[data-state="open"] {
  --tw-enter-translate-y: -100%;
}

.data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state="open"] {
  --tw-enter-translate-y: -48%;
}

.data-\[state\=open\]\:slide-in-from-top-full[data-state="open"] {
  --tw-enter-translate-y: -100%;
}

.data-\[state\=closed\]\:duration-300[data-state="closed"] {
  animation-duration: 300ms;
}

.data-\[state\=open\]\:duration-500[data-state="open"] {
  animation-duration: 500ms;
}

.data-\[panel-group-direction\=vertical\]\:after\:left-0[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  left: 0px;
}

.data-\[panel-group-direction\=vertical\]\:after\:h-1[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  height: 0.25rem;
}

.data-\[panel-group-direction\=vertical\]\:after\:w-full[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  width: 100%;
}

.data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[panel-group-direction\=vertical\]\:after\:translate-x-0[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[state\=open\]\:hover\:bg-accent:hover[data-state="open"] {
  background-color: var(--accent);
}

.data-\[state\=open\]\:hover\:bg-sidebar-accent:hover[data-state="open"] {
  background-color: var(--sidebar-accent);
}

.data-\[state\=open\]\:hover\:text-sidebar-accent-foreground:hover[data-state="open"] {
  color: var(--sidebar-accent-foreground);
}

.data-\[state\=open\]\:focus\:bg-accent:focus[data-state="open"] {
  background-color: var(--accent);
}

.group[data-collapsible="offcanvas"] .group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\] {
  left: calc(var(--sidebar-width) * -1);
}

.group[data-collapsible="offcanvas"] .group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\] {
  right: calc(var(--sidebar-width) * -1);
}

.group[data-side="left"] .group-data-\[side\=left\]\:-right-4 {
  right: -1rem;
}

.group[data-side="right"] .group-data-\[side\=right\]\:left-0 {
  left: 0px;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:-mt-8 {
  margin-top: -2rem;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:hidden {
  display: none;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:\!size-8 {
  width: 2rem !important;
  height: 2rem !important;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:w-\[--sidebar-width-icon\] {
  width: var(--sidebar-width-icon);
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)\)\] {
  width: calc(var(--sidebar-width-icon) + 1rem);
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)_\+2px\)\] {
  width: calc(var(--sidebar-width-icon) + 1rem + 2px);
}

.group[data-collapsible="offcanvas"] .group-data-\[collapsible\=offcanvas\]\:w-0 {
  width: 0px;
}

.group[data-collapsible="offcanvas"] .group-data-\[collapsible\=offcanvas\]\:translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group[data-side="right"] .group-data-\[side\=right\]\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group[data-state="open"] .group-data-\[state\=open\]\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:overflow-hidden {
  overflow: hidden;
}

.group[data-variant="floating"] .group-data-\[variant\=floating\]\:rounded-lg {
  border-radius: var(--radius);
}

.group[data-variant="floating"] .group-data-\[variant\=floating\]\:border {
  border-width: 1px;
}

.group[data-side="left"] .group-data-\[side\=left\]\:border-r {
  border-right-width: 1px;
}

.group[data-side="right"] .group-data-\[side\=right\]\:border-l {
  border-left-width: 1px;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:\!p-0 {
  padding: 0px !important;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:\!p-2 {
  padding: 0.5rem !important;
}

.group[data-collapsible="icon"] .group-data-\[collapsible\=icon\]\:opacity-0 {
  opacity: 0;
}

.group[data-variant="floating"] .group-data-\[variant\=floating\]\:shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.group[data-collapsible="offcanvas"] .group-data-\[collapsible\=offcanvas\]\:after\:left-full::after {
  content: var(--tw-content);
  left: 100%;
}

.group[data-collapsible="offcanvas"] .group-data-\[collapsible\=offcanvas\]\:hover\:bg-sidebar:hover {
  background-color: var(--sidebar-background);
}

.peer\/menu-button[data-size="default"] ~ .peer-data-\[size\=default\]\/menu-button\:top-1\.5 {
  top: 0.375rem;
}

.peer\/menu-button[data-size="lg"] ~ .peer-data-\[size\=lg\]\/menu-button\:top-2\.5 {
  top: 0.625rem;
}

.peer\/menu-button[data-size="sm"] ~ .peer-data-\[size\=sm\]\/menu-button\:top-1 {
  top: 0.25rem;
}

.peer\/menu-button[data-active="true"] ~ .peer-data-\[active\=true\]\/menu-button\:text-sidebar-accent-foreground {
  color: var(--sidebar-accent-foreground);
}

.dark\:border-destructive:is(.dark *) {
  border-color: var(--destructive);
}

@media (min-width: 640px) {

  .sm\:bottom-0 {
    bottom: 0px;
  }

  .sm\:right-0 {
    right: 0px;
  }

  .sm\:top-auto {
    top: auto;
  }

  .sm\:mt-0 {
    margin-top: 0px;
  }

  .sm\:block {
    display: block;
  }

  .sm\:inline {
    display: inline;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:max-w-sm {
    max-width: 24rem;
  }

  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .sm\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:flex-col {
    flex-direction: column;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:justify-end {
    justify-content: flex-end;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:gap-2\.5 {
    gap: 0.625rem;
  }

  .sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:space-x-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .sm\:rounded-lg {
    border-radius: var(--radius);
  }

  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:text-left {
    text-align: left;
  }

  .data-\[state\=open\]\:sm\:slide-in-from-bottom-full[data-state="open"] {
    --tw-enter-translate-y: 100%;
  }
}

@media (min-width: 768px) {

  .md\:absolute {
    position: absolute;
  }

  .md\:block {
    display: block;
  }

  .md\:flex {
    display: flex;
  }

  .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
    width: var(--radix-navigation-menu-viewport-width);
  }

  .md\:w-auto {
    width: auto;
  }

  .md\:max-w-\[420px\] {
    max-width: 420px;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .md\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .md\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .md\:opacity-0 {
    opacity: 0;
  }

  .after\:md\:hidden::after {
    content: var(--tw-content);
    display: none;
  }

  .peer[data-variant="inset"] ~ .md\:peer-data-\[variant\=inset\]\:m-2 {
    margin: 0.5rem;
  }

  .peer[data-state="collapsed"][data-variant="inset"] ~ .md\:peer-data-\[state\=collapsed\]\:peer-data-\[variant\=inset\]\:ml-2 {
    margin-left: 0.5rem;
  }

  .peer[data-variant="inset"] ~ .md\:peer-data-\[variant\=inset\]\:ml-0 {
    margin-left: 0px;
  }

  .peer[data-variant="inset"] ~ .md\:peer-data-\[variant\=inset\]\:rounded-xl {
    border-radius: 0.75rem;
  }

  .peer[data-variant="inset"] ~ .md\:peer-data-\[variant\=inset\]\:shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (min-width: 1024px) {

  .lg\:fixed {
    position: fixed;
  }

  .lg\:inset-y-0 {
    top: 0px;
    bottom: 0px;
  }

  .lg\:left-0 {
    left: 0px;
  }

  .lg\:z-50 {
    z-index: 50;
  }

  .lg\:block {
    display: block;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:w-64 {
    width: 16rem;
  }

  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .lg\:grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  .lg\:border-r {
    border-right-width: 1px;
  }

  .lg\:border-gray-200 {
    --tw-border-opacity: 1;
    border-color: rgb(229 231 235 / var(--tw-border-opacity, 1));
  }

  .lg\:bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }

  .lg\:p-6 {
    padding: 1.5rem;
  }

  .lg\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:pl-64 {
    padding-left: 16rem;
  }

  .lg\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

@media (min-width: 1280px) {

  .xl\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .xl\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .xl\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.\[\&\:has\(\[aria-selected\]\)\]\:bg-accent:has([aria-selected]) {
  background-color: var(--accent);
}

.first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:has([aria-selected]):first-child {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}

.last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:has([aria-selected]):last-child {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has([aria-selected].day-range-end) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role=checkbox]) {
  padding-right: 0px;
}

.\[\&\>button\]\:hidden>button {
  display: none;
}

.\[\&\>span\:last-child\]\:truncate>span:last-child {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.\[\&\>span\]\:line-clamp-1>span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.\[\&\>svg\+div\]\:translate-y-\[-3px\]>svg+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&\>svg\]\:absolute>svg {
  position: absolute;
}

.\[\&\>svg\]\:left-4>svg {
  left: 1rem;
}

.\[\&\>svg\]\:top-4>svg {
  top: 1rem;
}

.\[\&\>svg\]\:size-4>svg {
  width: 1rem;
  height: 1rem;
}

.\[\&\>svg\]\:h-2\.5>svg {
  height: 0.625rem;
}

.\[\&\>svg\]\:h-3>svg {
  height: 0.75rem;
}

.\[\&\>svg\]\:h-3\.5>svg {
  height: 0.875rem;
}

.\[\&\>svg\]\:w-2\.5>svg {
  width: 0.625rem;
}

.\[\&\>svg\]\:w-3>svg {
  width: 0.75rem;
}

.\[\&\>svg\]\:w-3\.5>svg {
  width: 0.875rem;
}

.\[\&\>svg\]\:shrink-0>svg {
  flex-shrink: 0;
}

.\[\&\>svg\]\:text-destructive>svg {
  color: var(--destructive);
}

.\[\&\>svg\]\:text-foreground>svg {
  color: var(--foreground);
}

.\[\&\>svg\]\:text-muted-foreground>svg {
  color: var(--muted-foreground);
}

.\[\&\>svg\]\:text-sidebar-accent-foreground>svg {
  color: var(--sidebar-accent-foreground);
}

.\[\&\>svg\~\*\]\:pl-7>svg~* {
  padding-left: 1.75rem;
}

.\[\&\>tr\]\:last\:border-b-0:last-child>tr {
  border-bottom-width: 0px;
}

.\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90[data-panel-group-direction=vertical]>div {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state=open]>svg {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.recharts-cartesian-axis-tick_text\]\:fill-muted-foreground .recharts-cartesian-axis-tick text {
  fill: var(--muted-foreground);
}

.\[\&_\.recharts-curve\.recharts-tooltip-cursor\]\:stroke-border .recharts-curve.recharts-tooltip-cursor {
  stroke: var(--border);
}

.\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent .recharts-dot[stroke='#fff'] {
  stroke: transparent;
}

.\[\&_\.recharts-layer\]\:outline-none .recharts-layer {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.\[\&_\.recharts-polar-grid_\[stroke\=\'\#ccc\'\]\]\:stroke-border .recharts-polar-grid [stroke='#ccc'] {
  stroke: var(--border);
}

.\[\&_\.recharts-radial-bar-background-sector\]\:fill-muted .recharts-radial-bar-background-sector {
  fill: var(--muted);
}

.\[\&_\.recharts-rectangle\.recharts-tooltip-cursor\]\:fill-muted .recharts-rectangle.recharts-tooltip-cursor {
  fill: var(--muted);
}

.\[\&_\.recharts-reference-line_\[stroke\=\'\#ccc\'\]\]\:stroke-border .recharts-reference-line [stroke='#ccc'] {
  stroke: var(--border);
}

.\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent .recharts-sector[stroke='#fff'] {
  stroke: transparent;
}

.\[\&_\.recharts-sector\]\:outline-none .recharts-sector {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.\[\&_\.recharts-surface\]\:outline-none .recharts-surface {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading] {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading] {
  font-size: 0.75rem;
  line-height: 1rem;
}

.\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading] {
  font-weight: 500;
}

.\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground [cmdk-group-heading] {
  color: var(--muted-foreground);
}

.\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 [cmdk-group]:not([hidden]) ~[cmdk-group] {
  padding-top: 0px;
}

.\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg {
  height: 1.25rem;
}

.\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg {
  width: 1.25rem;
}

.\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input] {
  height: 3rem;
}

.\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item] {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg {
  height: 1.25rem;
}

.\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg {
  width: 1.25rem;
}

.\[\&_p\]\:leading-relaxed p {
  line-height: 1.625;
}

.\[\&_svg\]\:pointer-events-none svg {
  pointer-events: none;
}

.\[\&_svg\]\:size-4 svg {
  width: 1rem;
  height: 1rem;
}

.\[\&_svg\]\:shrink-0 svg {
  flex-shrink: 0;
}

.\[\&_tr\:last-child\]\:border-0 tr:last-child {
  border-width: 0px;
}

.\[\&_tr\]\:border-b tr {
  border-bottom-width: 1px;
}

[data-side=left][data-collapsible=offcanvas] .\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2 {
  right: -0.5rem;
}

[data-side=left][data-state=collapsed] .\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize {
  cursor: e-resize;
}

[data-side=left] .\[\[data-side\=left\]_\&\]\:cursor-w-resize {
  cursor: w-resize;
}

[data-side=right][data-collapsible=offcanvas] .\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2 {
  left: -0.5rem;
}

[data-side=right][data-state=collapsed] .\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize {
  cursor: w-resize;
}

[data-side=right] .\[\[data-side\=right\]_\&\]\:cursor-e-resize {
  cursor: e-resize;
}
</style></head>
  <body>
    <div id="root"><div role="region" aria-label="Notifications (F8)" tabindex="-1" style=""><span tabindex="0" style="position: fixed; border: 0px; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; overflow-wrap: normal;"></span><ol tabindex="-1" class="fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]"><li tabindex="0" data-state="open" data-swipe-direction="right" class="group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full destructive group border-destructive bg-destructive text-destructive-foreground" data-radix-collection-item="" style="user-select: none; touch-action: none;"><div class="grid gap-1"><div class="text-sm font-semibold">Error</div><div class="text-sm opacity-90">Login failed</div></div><button type="button" class="absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600" toast-close="" data-radix-toast-announce-exclude=""><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x h-4 w-4"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg></button></li></ol><span tabindex="0" style="position: fixed; border: 0px; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; overflow-wrap: normal;"></span></div><div class="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8"><div class="max-w-md w-full space-y-8"><div class="text-center"><div class="mx-auto h-16 w-16 bg-primary-500 rounded-xl flex items-center justify-center"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-wrench h-8 w-8 text-white"><path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path></svg></div><h1 class="mt-6 text-3xl font-bold text-gray-900">MaintAInPro CMMS</h1><p class="mt-2 text-sm text-gray-600">Sign in to your maintenance management system</p></div><div class="rounded-lg border bg-card text-card-foreground shadow-sm"><div class="flex flex-col space-y-1.5 p-6"><div class="text-2xl font-semibold leading-none tracking-tight text-center">Sign In</div></div><div class="p-6 pt-0"><form class="space-y-6"><div><label for="email" class="block text-sm font-medium text-gray-700">Email Address</label><input class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm mt-1" id="email" required="" placeholder="Enter your email" data-testid="email-input" type="email" value=""></div><div><label for="password" class="block text-sm font-medium text-gray-700">Password</label><div class="mt-1 relative"><input class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm pr-10" id="password" required="" placeholder="Enter your password" data-testid="password-input" type="password" value=""><button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye h-4 w-4 text-gray-400"><path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"></path><circle cx="12" cy="12" r="3"></circle></svg></button></div></div><button class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 w-full" type="submit" data-testid="login-button">Sign In</button></form><div class="mt-6 p-4 bg-blue-50 rounded-lg"><h3 class="text-sm font-medium text-blue-900 mb-2">Demo Credentials</h3><div class="space-y-1 text-sm text-blue-700"><p><strong>Supervisor:</strong> supervisor@company.com</p><p><strong>Technician:</strong> technician@company.com</p><p><strong>Manager:</strong> manager@company.com</p><p><strong>Password:</strong> demo123</p></div><div class="mt-3 flex space-x-2"><button class="inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3" type="button">Use Supervisor</button><button class="inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3" type="button">Use Technician</button></div></div></div></div><div class="text-center text-sm text-gray-500"><p>Enterprise Maintenance Management System</p><p class="mt-1">Secure • Reliable • Efficient</p></div></div></div></div>
    <script type="module" src="/src/main.tsx?v=91TNiX-YUlTO_i_0qAEnJ"></script>
  

</body></html>
Error message visible: [33mfalse[39m
Current URL: http://localhost:5000/login
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="debug-server-env.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.884" errors="0">
<testcase name="check server environment during test" classname="debug-server-env.spec.ts" time="0.884">
<system-out>
<![CDATA[Debug endpoint status: [33m200[39m
Debug endpoint body: {"NODE_ENV":"development","TEST_AUTH_MODE":"disabled","PLAYWRIGHT":"true","DISABLE_RATE_LIMITING":"true","DATABASE_URL":"postgres://neondb_owner:npg_9wIlAORgDS7L@ep-twilight-hill-adkx14x5-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require"}
Auth mode endpoint status: [33m200[39m
Auth mode endpoint body: {"TEST_AUTH_MODE":"disabled","NODE_ENV":"development","PLAYWRIGHT":"true","DISABLE_RATE_LIMITING":"true","authBypassActive":false}
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="debug-valid-login.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="3.754" errors="0">
<testcase name="debug valid credentials login" classname="debug-valid-login.spec.ts" time="3.754">
<system-out>
<![CDATA[Login Requests: [
  {
    "url": "http://localhost:5000/api/auth/login",
    "method": "POST",
    "postData": "{\"email\":\"supervisor@company.com\",\"password\":\"demo123\",\"deviceFingerprint\":\"eyJ1c2VyQWdlbnQiOiJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTQwLjAuNzMzOS4xNiBTYWZhcmkvNTM3LjM2IiwibGFuZ3VhZ2UiOiJlbi1VUyIsInBsYXRmb3JtIjoiTGludXggeDg2XzY0Iiwic2NyZWVuUmVzb2x1dGlvbiI6IjEyODB4NzIwIiwidGltZXpvbmUiOiJVVEMiLCJjYW52YXMiOiJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQVN3QUFBQ1dDQVlBQUFCa1c3WFNBQUFNVVVsRVFWUjRBZXlhZGNnMFhSbUh4KzVBL094dXhTNHN4TVF1c0F2RlFQM0RSQlFWQ3pGUjdFTEV4TzVBUmNYdXdzTHVMdXpXNy90ZHovZk93NzY3Nys3T3p1N3NuSm01WHM0OTU4eVpNeWV1KzkzZmMySk9XdmxQQWhLUXdFQUlLRmdEY1pUZGxJQUVxbXJmZ25YbVFEOCtkdW5ZcnNQOVUrRXZZcStPUFRQMnV0aFF3dWZTMFFmRURCS1F3QW9DODRMMTFaUkZVTEIvSlAydDJCdGpGNDd0SXZ3MWxWdzM5c1BZcnNQalUrRlRZbmVMdlNqMnBOaFFBbUwxam9hZHZVbktYU3kyY2ZBRkNReWR3THhnTVo2SDVYS1NHTE9oT3lmK2ZleHJzZXZGdGczL1RRVWZpZjB0dHN0dzhsUjJ0dGpuWTRUdjVmS04yRkRDRjlMUm44ZWFoSWVuMEVWakJnbE1qc0N4Qkt1RzhLOGt2aFJqcWNXTTVhVkpueXBHT0djdWI0cjlOdmFqMlBOanA0NFJQcDRMczUxRWgrRUpTWDAwaGdneWU2dVhoQmRJM3J0aWY0eDlObmJMV0IxV3RWR1hJVDU5THYrSkVUNmR5L3lTa0JuSk41Ti8xOWg3WXN3YVg1eTQ3dThwa241MjdEZXhEOGV1RTJQY2QwcE1ZTXpQU3VMN3NUL0UzaDQ3YjR4QTI0em5Qcm41YWV5QnNkdkVhT04raWI4VDR4MzRVVTl1cTZmbDhwTFlPMk1zWVJOVnMwdkNUeVNER2RjYkVuOG85cGxZL2NmaVkwa3pRMzEzNGlFdGVkTmRnd1MySjdCS3NHWnJmMFp1V0JaZUpqSGhiYm44TG5ibDJCMWpDTkJURXhQZW1zdk5ZN1BoVnJsNWMydzJNSXQ3U3pMNDBUSmplRzdTcjQ5ZFBVWlkxUWJQYTJPWmllaHd6N3NzQ1VuWDl2OGt6aCtqanpkTHpCaXVsZmllTWNLOWM3bGQ3TGF4TzhUdUVrT1FlQy9KaXFYbEZaSmduRmRLL09zWXl6ZjZ6NHd4dDlXTmM2SE8xeWJtdmZNbHZueU12QnNtdmxvTU1VdFU4UTRDaEhoZWtZdzU0LzBISmU4UnNldkhYaGg3VFl6MnJwMFk3dkN0QlRWWkJnbk1FUmpwYlZQQitsWEcvL2ZZeFdOWGpWMDI5dURZajJQTUFCNlgrRjR4QWlMRUQ1dlpFL2U4ZzBpd0Y4WjliVmRKZ2gvMW94SXpVK1BIZm8ray94UmIxMGFLYkJST205SlBqaEdZamJFRXV4UTNNY1QwbFltWnZkQ1BweWQ5MWhnQmtiaHZFaytNc2R4azc0MXhYeVQzaUdPaWc0RFF3b0xsTXhtbnllV3hNV1p0WDB6TWJJbDJrandJLzh5VldSWmNrMXdJQ0NJelZ4NThLaGRtbXl4NWt6UklZTG9FbWdvV2hCQ1NVeVp4d1JnL1NINTBMSWN3OXFWWUh2SHNKM25PajcvK2dkNDY5eCtNTVROSmRCZ3VsQlI1OVk4OHR4V2l4dktOZWxhMVFkbE5qTDcvZWVZRitrNzlaSjBuRi9hOEVoMkU3K1pLdnhKVlo4L2xqREdXaW93VFE3alBrTHpaalcrV2c4azZESXdKc2FvekVDWm1YZlY5TFViMS9YeE0rVHFQdnBLdSswdGFrOEFrQ1RRVkxIN1UvSGo1TVRQcllGbENQRy9NUUFBNXV5eThSVElRb2tTTkEvV3VhNk54WldzS3dnQWhtaTMydnlNMzlJTWtTMExTcy9ZS0hod3hsbmxIa2djUk03cUR4SkxMZlBrbHhjeVdnQVJtQ2ZCam5iMWZsbVlQNnl0NStNbllEMklzbVdabkRLZEwzcmxpZFdDL2l2Mld5eVdEcFIvTHhDU1BDdFNEQ0I0M2s4dGUwZzF5ejdOMWJhVFlUZ0o3YUN5NTZzcU9xNnFxSGdzekhmYklXTkxXejRrdmtRdmlsZWlZZ2RrUSsyYjF3M01ud1pJeGtVRUNFbWhMWUpWZ3NaRjl6VlQ4OGhpYnl1d3ZNUlBoUklzVFBUYkoyYWVpSFBzK2owbTVPbkJFajdoeElzYm1NcWVBOWJNNlprOElFZVJkaEF1eGVrRWVzdW5jcEkwVTNVbjRRR3JoSlBRYWlWbnljbmpBa2k2M0ZlUGxSUEdSdVdIakhKRmlVNThUdXZyVUw0OFdBdCt3TVhZMjc5bnI0c1NRMDlDRmdpMHlXSzZlSSsrNXB4VUlobWtST0paZzhaVTRQOVIvQndWSDdNeVNicG8wMzJJbE9nZ2MzZk1jWWZseWNsaENQVFR4Yk9DVTcwYkpPTmJzS3RrSFlzREpIRCs4YnllRFV6Rk8wdGd2eW0zVnBBM0tiV3ZQU3dYc3diMDNNZnRPYkhJanNBaG5zaXFFK0gxSmNGTDN5OFI4SnNHSlliMjNsS3lGd0tjTUNDR2ZKU0RZMkhNV1NyWEw0Qk1NeEpCTiszWTErSllFQmtwZ1hyQTQvV01XTVd1YytQRjkwK3dRK2VIZVBobUlEWjhMSURUelAyQ0VnSG80L1V2Umc0QVFrUGYxZzd1cVlzK0xUdzM0UG90UEpEaHRPL0tvYXRKR1haWTlJZXJseEpJOFBuNnRqLzNmbnd6cVQzUVltUEh3T1FNWnpJYVlOVkVHWXpuTEp4d3NCM25POTJqVXg4a2dNeHMrcGtWZ2VjYVlhWmRUUis1ck8xa1N6RXpabUQ5TDByUkhQVWxXajg0Rk1VNTBHRGdWNWZNRk1saEs4OTBYYWV4bnVkQkd2Vkgvc3R5elhKNnZJOW1HelFuNHhwQUl6QXZXa1BxK3E3N2VQUlZ4TXNuQkFvTEVKeHFJRmN2VlBESklRQUtsRUZDd3F1cFZjUWF6TUQ1TllPWjB5ZHl6bi9hWHhBWUpTS0FnQWdyV2ljNTRTQ0tXWFdkS3pCNFZlM2RKdGdwODlEbDc2dGlxRWwrU2dBUVdDV3dwV0lzVm1pTUJDVWlnS3dJS1ZsZGtyVmNDRXRnNUFRVnI1MGl0VUFJUzZJcUFndFVWMmZIVjY0Z2swRHNCQmF0M0Y5Z0JDVWlnS1FFRnF5a3B5MGxBQXIwVFVMQjZkNEVka0VCNUJFcnRrWUpWcW1mc2x3UWtzRUJBd1ZwQVlvWUVKRkFxQVFXclZNL1lMd2xJWUlHQWdyV0FaUHNNYTVDQUJMb2hvR0IxdzlWYUpTQ0JEZ2dvV0IxQXRVb0pTS0FiQWdwV04xeXRkU29FSE9kZUNTaFllOFZ0WXhLUXdEWUVGS3h0NlBtdUJDU3dWd0lLMWw1eDI1Z0VKTEFOZ1g0RmE1dWUrNjRFSkRBNUFnclc1Rnp1Z0NVd1hBSUsxbkI5Wjg4bE1Ea0NDdGJrWE43WGdHMVhBdHNUVUxDMloyZ05FcERBbmdnb1dIc0NiVE1Ta01EMkJCU3M3UmxhZ3dRa2NEU0J6dTRVck03UVdyRUVKTEJyQWdyV3JvbGFud1FrMEJrQkJhc3p0RllzQVFuc21vQ0N0V3VpMjlkbkRSS1F3QklDQ3RZU01HWkxRQUxsRVZDd3l2T0pQWktBQkpZUVVMQ1dnREZiQXZzZ1lCdWJFVkN3TnVObGFRbElvRWNDQ2xhUDhHMWFBaExZaklDQ3RSa3ZTMHRBQWowU0dMUmc5Y2pOcGlVZ2dSNElLRmc5UUxkSkNVaWdIUUVGcXgwMzM1S0FCSG9nb0dEMUFOMG1XeER3RlFtRWdJSVZDQVlKU0dBWUJCU3NZZmpKWGtwQUFpR2dZQVdDUVFJU0tJbkE4cjRvV012WitFUUNFaWlNZ0lKVm1FUHNqZ1Frc0p5QWdyV2NqVThrSUlIQ0NDaFloVGxrKys1WWd3VEdTMERCR3E5dkhaa0VSa2RBd1JxZFN4MlFCTVpMUU1FYXIyOGQyZmdKVEc2RUN0YmtYTzZBSlRCY0FncldjSDFuenlVd09RSUsxdVJjN29BbE1Gd0NVeGFzNFhyTm5rdGdvZ1FVcklrNjNtRkxZSWdFRkt3aGVzMCtTMkNpQkJTc2lUcCthc04ydk9NZ29HQ053NCtPUWdLVElLQmdUY0xORGxJQzR5Q2dZSTNEajQ1Q0FwTWcwRWl3SmtIQ1FVcEFBc1VUVUxDS2Q1RWRsSUFFYWdJS1ZrM0NXQUlTS0o2QWdsVzhpL2JjUVp1VFFNRUVGS3lDbldQWEpDQ0Jvd2tvV0VmejhFNENFaWlZZ0lKVnNIUHNtZ1M2SlRDODJoV3M0Zm5NSGt0Z3NnUVVyTW02M29GTFlIZ0VGS3poK2N3ZVMyQ3lCQlNzMXE3M1JRbElZTjhFRkt4OUU3YzlDVWlnTlFFRnF6VTZYNVNBQlBaTlFNSGFOM0hiR3lJQisxd0lBUVdyRUVmWURRbElZRDBCQldzOUkwdElRQUtGRUZDd0NuR0UzWkNBQk5ZVDJJZGdyZStGSlNRZ0FRazBJS0JnTllCa0VRbElvQXdDQ2xZWmZyQVhFcEJBQXdJS1ZnTklGbWxPd0pJUzZKS0FndFVsWGV1V2dBUjJTa0RCMmlsT0s1T0FCTG9rb0dCMVNkZTZKVEJtQWoyTVRjSHFBYnBOU2tBQzdRZ29XTzI0K1pZRUpOQURBUVdyQitnMktRRUp0Q09nWUxYanR2MWIxaUFCQ1d4TVFNSGFHSmt2U0VBQ2ZSRlFzUG9pYjdzU2tNREdCQlNzalpINWdnUTJKV0Q1WFJGUXNIWkYwbm9rSUlIT0NTaFluU08yQVFsSVlGY0VGS3hka2JRZUNVaWdjd0lERUt6T0dkaUFCQ1F3RUFJSzFrQWNaVGNsSUlHcVVyRDhYeUFCQ1F5R2dJSTFHRmROb3FNT1VnSXJDU2hZSy9INFVBSVNLSW1BZ2xXU04reUxCQ1N3a29DQ3RSS1BEeVVnZ2E0SXRLbFh3V3BEelhja0lJRmVDQ2hZdldDM1VRbElvQTBCQmFzTk5kK1JnQVI2SWFCZzlZSjkrMGF0UVFKVEpLQmdUZEhyamxrQ0F5V2dZQTNVY1haYkFsTWtvR0JOMGV1T2VWZ0U3TzBoQVFYckVJVUpDVWlnZEFJS1Z1a2VzbjhTa01BaEFRWHJFSVVKQ1VpZ2RBTGpGNnpTUFdEL0pDQ0J4Z1FVck1hb0xDZ0JDZlJOUU1IcTJ3TzJMd0VKTkNhZ1lEVkdaY0h5Q2RqRHNSTlFzTWJ1WWNjbmdSRVJVTEJHNUV5SElvR3hFMUN3eHU1aHh5ZUJFUkdZRWF3UmpjcWhTRUFDb3lTZ1lJM1NyUTVLQXVNa29HQ04wNitPU2dLakpLQmdqZEt0YXdkbEFRa01rb0NDTlVpMzJXa0pUSk9BZ2pWTnZ6dHFDUXlTZ0lJMVNMZlphUWswSnpDbWtncldtTHpwV0NRd2NnSUsxc2dkN1BBa01DWUNDdGFZdk9sWUpEQnlBZ3JXR2dmN1dBSVNLSWVBZ2xXT0wreUpCQ1N3aG9DQ3RRYVFqeVVnZ1hJSUtGamwrTUtlOUUzQTlvc25vR0FWN3lJN0tBRUoxQVFVckpxRXNRUWtVRHdCQmF0NEY5bEJDVWlnSm5BQ0FBQUEvLzgzVEtHTEFBQUFCa2xFUVZRREFGandNRHo5Tm5XSEFBQUFBRWxGVGtTdVFtQ0MifQ==\"}"
  }
]
Login Responses: [
  {
    "url": "http://localhost:5000/api/auth/login",
    "status": 429,
    "statusText": "Too Many Requests",
    "body": "Too many authentication attempts from this IP, please try again after 15 minutes."
  }
]
Current URL: http://localhost:5000/login
Toast error text: ErrorLogin failed
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="debug-work-orders.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="1" skipped="0" time="0" errors="0">
<testcase name="debug work order navigation" classname="debug-work-orders.spec.ts" time="0">
<failure message="debug-work-orders.spec.ts:19:1 debug work order navigation" type="FAILURE">
<![CDATA[  [chromium] › debug-work-orders.spec.ts:19:1 › debug work order navigation ────────────────────────

    SyntaxError: Unexpected token 'T', "Too many a"... is not valid JSON

      12 |     },
      13 |   });
    > 14 |   const body = await response.json();
         |                ^
      15 |   authToken = body.token;
      16 |   await apiContext.dispose();
      17 | });
        at /workspaces/MaintAInPro/tests/e2e/debug-work-orders.spec.ts:14:16
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="debug-workorders.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="1" skipped="0" time="30.027" errors="0">
<testcase name="debug work order data" classname="debug-workorders.spec.ts" time="30.027">
<failure message="debug-workorders.spec.ts:3:1 debug work order data" type="FAILURE">
<![CDATA[  [chromium] › debug-workorders.spec.ts:3:1 › debug work order data ────────────────────────────────

    Test timeout of 30000ms exceeded.

    Error: page.waitForURL: Test timeout of 30000ms exceeded.
    =========================== logs ===========================
    waiting for navigation to "http://localhost:5000/dashboard" until "load"
    ============================================================

      12 |
      13 |   // Wait for login to complete
    > 14 |   await page.waitForURL('http://localhost:5000/dashboard');
         |              ^
      15 |
      16 |   // Navigate to work orders
      17 |   await page.click('[data-testid="nav-work-orders"]');
        at /workspaces/MaintAInPro/tests/e2e/debug-workorders.spec.ts:14:14

    Error Context: ../../test-results/playwright-artifacts/debug-workorders-debug-work-order-data-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/debug-workorders-debug-work-order-data-chromium/error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="main-flows.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="19" failures="17" skipped="0" time="178.595" errors="0">
<testcase name="Authentication Flow › user can login and logout" classname="main-flows.spec.ts" time="2.16">
<system-out>
<![CDATA[Dashboard HTML after login: <!DOCTYPE html><html lang="en"><head>
    <script type="module">import { injectIntoGlobalHook } from "/@react-refresh";
injectIntoGlobalHook(window);
window.$RefreshReg$ = () => {};
window.$RefreshSig$ = () => (type) => type;</script>

    <script type="module" src="/@vite/client"></script>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=no">
    <title>MaintainPro CMMS</title>

    <!-- PWA Meta Tags -->
    <meta name="description" content="Enterprise Maintenance Management System for industrial operations">
    <meta name="theme-color" content="#2563eb">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="MaintainPro">
    <meta name="msapplication-TileColor" content="#2563eb">
    <meta name="msapplication-conf
Overlay/loader count after login: [33m2[39m
]]>
</system-out>
</testcase>
<testcase name="Authentication Flow › shows error for invalid credentials" classname="main-flows.spec.ts" time="5.819">
<failure message="main-flows.spec.ts:71:3 shows error for invalid credentials" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:71:3 › Authentication Flow › shows error for invalid credentials ─

    Error: expect(locator).toContainText(expected) failed

    Locator: locator('.destructive')
    Expected string: "Invalid credentials"
    Received string: "ErrorLogin failed"
    Timeout: 5000ms

    Call log:
      - Expect "toContainText" with timeout 5000ms
      - waiting for locator('.destructive')
        9 × locator resolved to <li tabindex="0" data-state="open" data-swipe-direction="right" data-radix-collection-item="" class="group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:anim…>…</li>
          - unexpected value "ErrorLogin failed"


      79 |     // Check for toast notification with error message
      80 |     await expect(page.locator('.destructive')).toBeVisible();
    > 81 |     await expect(page.locator('.destructive')).toContainText('Invalid credentials');
         |                                                ^
      82 |   });
      83 | });
      84 |
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:81:48

    Error Context: ../../test-results/playwright-artifacts/main-flows-Authentication--59a09-ror-for-invalid-credentials-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Authentication--59a09-ror-for-invalid-credentials-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Work Order Management › technician can complete work order flow @smoke" classname="main-flows.spec.ts" time="5.926">
<failure message="main-flows.spec.ts:98:3 technician can complete work order flow @smoke" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:98:3 › Work Order Management › technician can complete work order flow @smoke 

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      93 |     });
      94 |     await page.reload();
    > 95 |     await expect(page).toHaveURL('/dashboard');
         |                        ^
      96 |   });
      97 |
      98 |   test('technician can complete work order flow @smoke', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:95:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Work-Order-Mana-de150-plete-work-order-flow-smoke-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Work-Order-Mana-de150-plete-work-order-flow-smoke-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Work Order Management › can create new work order" classname="main-flows.spec.ts" time="6.304">
<failure message="main-flows.spec.ts:134:3 can create new work order" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:134:3 › Work Order Management › can create new work order ────────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      93 |     });
      94 |     await page.reload();
    > 95 |     await expect(page).toHaveURL('/dashboard');
         |                        ^
      96 |   });
      97 |
      98 |   test('technician can complete work order flow @smoke', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:95:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Work-Order-Management-can-create-new-work-order-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Work-Order-Management-can-create-new-work-order-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Work Order Management › can filter work orders" classname="main-flows.spec.ts" time="6.843">
<failure message="main-flows.spec.ts:167:3 can filter work orders" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:167:3 › Work Order Management › can filter work orders ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      93 |     });
      94 |     await page.reload();
    > 95 |     await expect(page).toHaveURL('/dashboard');
         |                        ^
      96 |   });
      97 |
      98 |   test('technician can complete work order flow @smoke', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:95:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Work-Order-Management-can-filter-work-orders-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Work-Order-Management-can-filter-work-orders-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Work Order Management › can search work orders" classname="main-flows.spec.ts" time="6.879">
<failure message="main-flows.spec.ts:186:3 can search work orders" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:186:3 › Work Order Management › can search work orders ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      93 |     });
      94 |     await page.reload();
    > 95 |     await expect(page).toHaveURL('/dashboard');
         |                        ^
      96 |   });
      97 |
      98 |   test('technician can complete work order flow @smoke', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:95:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Work-Order-Management-can-search-work-orders-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Work-Order-Management-can-search-work-orders-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Equipment Management › can view equipment list" classname="main-flows.spec.ts" time="5.844">
<failure message="main-flows.spec.ts:208:3 can view equipment list" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:208:3 › Equipment Management › can view equipment list ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      203 |     await page.fill('[data-testid="password-input"]', 'password');
      204 |     await page.click('[data-testid="login-button"]');
    > 205 |     await expect(page).toHaveURL('/dashboard');
          |                        ^
      206 |   });
      207 |
      208 |   test('can view equipment list', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:205:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Equipment-Management-can-view-equipment-list-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Equipment-Management-can-view-equipment-list-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Equipment Management › can create new equipment" classname="main-flows.spec.ts" time="5.91">
<failure message="main-flows.spec.ts:217:3 can create new equipment" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:217:3 › Equipment Management › can create new equipment ──────────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      203 |     await page.fill('[data-testid="password-input"]', 'password');
      204 |     await page.click('[data-testid="login-button"]');
    > 205 |     await expect(page).toHaveURL('/dashboard');
          |                        ^
      206 |   });
      207 |
      208 |   test('can view equipment list', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:205:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Equipment-Management-can-create-new-equipment-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Equipment-Management-can-create-new-equipment-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Equipment Management › can scan QR code for equipment" classname="main-flows.spec.ts" time="5.852">
<failure message="main-flows.spec.ts:237:3 can scan QR code for equipment" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:237:3 › Equipment Management › can scan QR code for equipment ────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      203 |     await page.fill('[data-testid="password-input"]', 'password');
      204 |     await page.click('[data-testid="login-button"]');
    > 205 |     await expect(page).toHaveURL('/dashboard');
          |                        ^
      206 |   });
      207 |
      208 |   test('can view equipment list', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:205:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Equipment-Manag-2d8ab--scan-QR-code-for-equipment-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Equipment-Manag-2d8ab--scan-QR-code-for-equipment-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard and Analytics › displays dashboard metrics" classname="main-flows.spec.ts" time="5.957">
<failure message="main-flows.spec.ts:263:3 displays dashboard metrics" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:263:3 › Dashboard and Analytics › displays dashboard metrics ─────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      258 |     await page.fill('[data-testid="password-input"]', 'password');
      259 |     await page.click('[data-testid="login-button"]');
    > 260 |     await expect(page).toHaveURL('/dashboard');
          |                        ^
      261 |   });
      262 |
      263 |   test('displays dashboard metrics', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:260:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Dashboard-and-A-2ddcc--displays-dashboard-metrics-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Dashboard-and-A-2ddcc--displays-dashboard-metrics-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard and Analytics › can filter dashboard by date range" classname="main-flows.spec.ts" time="6.456">
<failure message="main-flows.spec.ts:275:3 can filter dashboard by date range" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:275:3 › Dashboard and Analytics › can filter dashboard by date range 

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      258 |     await page.fill('[data-testid="password-input"]', 'password');
      259 |     await page.click('[data-testid="login-button"]');
    > 260 |     await expect(page).toHaveURL('/dashboard');
          |                        ^
      261 |   });
      262 |
      263 |   test('displays dashboard metrics', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:260:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Dashboard-and-A-34429-ter-dashboard-by-date-range-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Dashboard-and-A-34429-ter-dashboard-by-date-range-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › mobile navigation works correctly" classname="main-flows.spec.ts" time="30.026">
<failure message="main-flows.spec.ts:294:3 mobile navigation works correctly" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:294:3 › Mobile Responsiveness › mobile navigation works correctly 

    Test timeout of 30000ms exceeded.

    Error: page.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="mobile-menu-button"]')


      299 |
      300 |     // Open mobile menu
    > 301 |     await page.click('[data-testid="mobile-menu-button"]');
          |                ^
      302 |
      303 |     // Verify menu items are visible
      304 |     await expect(page.locator('[data-testid="mobile-nav-dashboard"]')).toBeVisible();
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:301:16

    Error Context: ../../test-results/playwright-artifacts/main-flows-Mobile-Responsi-5632e--navigation-works-correctly-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Mobile-Responsi-5632e--navigation-works-correctly-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Mobile Responsiveness › work order cards are touch-friendly" classname="main-flows.spec.ts" time="30.029">
<failure message="main-flows.spec.ts:313:3 work order cards are touch-friendly" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:313:3 › Mobile Responsiveness › work order cards are touch-friendly 

    Test timeout of 30000ms exceeded.

    Error: locator.boundingBox: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="work-order-card"]').first()


      321 |     // Verify work order cards are adequately sized for touch
      322 |     const workOrderCard = page.locator('[data-testid="work-order-card"]').first();
    > 323 |     const boundingBox = await workOrderCard.boundingBox();
          |                                             ^
      324 |
      325 |     // Minimum touch target size should be 44px (WCAG recommendation)
      326 |     expect(boundingBox!.height).toBeGreaterThan(44);
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:323:45

    Error Context: ../../test-results/playwright-artifacts/main-flows-Mobile-Responsi-52d7b-er-cards-are-touch-friendly-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Mobile-Responsi-52d7b-er-cards-are-touch-friendly-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Offline Functionality › shows offline indicator when network is unavailable" classname="main-flows.spec.ts" time="5.874">
<failure message="main-flows.spec.ts:331:3 shows offline indicator when network is unavailable" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:331:3 › Offline Functionality › shows offline indicator when network is unavailable 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="offline-indicator"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="offline-indicator"]')


      339 |
      340 |     // Verify offline indicator appears
    > 341 |     await expect(page.locator('[data-testid="offline-indicator"]')).toBeVisible();
          |                                                                     ^
      342 |     await expect(page.locator('[data-testid="offline-indicator"]')).toContainText('Offline');
      343 |   });
      344 |
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:341:69

    Error Context: ../../test-results/playwright-artifacts/main-flows-Offline-Functio-20812-when-network-is-unavailable-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Offline-Functio-20812-when-network-is-unavailable-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Offline Functionality › can complete work orders offline" classname="main-flows.spec.ts" time="30.032">
<failure message="main-flows.spec.ts:345:3 can complete work orders offline" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:345:3 › Offline Functionality › can complete work orders offline ─

    Test timeout of 30000ms exceeded.

    Error: page.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="work-order-card"]')


      355 |
      356 |     // Complete work order
    > 357 |     await page.click('[data-testid="work-order-card"]');
          |                ^
      358 |     await page.click('[data-testid="status-select"]');
      359 |     await page.click('text=Completed');
      360 |     await page.click('[data-testid="complete-button"]');
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:357:16

    Error Context: ../../test-results/playwright-artifacts/main-flows-Offline-Functio-6eeb0-omplete-work-orders-offline-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Offline-Functio-6eeb0-omplete-work-orders-offline-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility › supports keyboard navigation" classname="main-flows.spec.ts" time="5.754">
<failure message="main-flows.spec.ts:377:3 supports keyboard navigation" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:377:3 › Accessibility › supports keyboard navigation ─────────────

    Error: expect(locator).toBeFocused() failed

    Locator:  locator('[data-testid="login-button"]')
    Expected: focused
    Received: inactive
    Timeout:  5000ms

    Call log:
      - Expect "toBeFocused" with timeout 5000ms
      - waiting for locator('[data-testid="login-button"]')
        9 × locator resolved to <button type="submit" data-testid="login-button" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 w-full">Sign In</button>
          - unexpected value "inactive"


      386 |
      387 |     await page.keyboard.press('Tab');
    > 388 |     await expect(page.locator('[data-testid="login-button"]')).toBeFocused();
          |                                                                ^
      389 |   });
      390 |
      391 |   test('has proper focus indicators', async ({ page }) => {
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:388:64

    Error Context: ../../test-results/playwright-artifacts/main-flows-Accessibility-supports-keyboard-navigation-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Accessibility-supports-keyboard-navigation-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility › has proper focus indicators" classname="main-flows.spec.ts" time="0.801">
</testcase>
<testcase name="Performance › dashboard loads within acceptable time" classname="main-flows.spec.ts" time="5.786">
<failure message="main-flows.spec.ts:405:3 dashboard loads within acceptable time" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:405:3 › Performance › dashboard loads within acceptable time ─────

    Error: expect(page).toHaveURL(expected) failed

    Expected string: "http://localhost:5000/dashboard"
    Received string: "http://localhost:5000/login"
    Timeout: 5000ms

    Call log:
      - Expect "toHaveURL" with timeout 5000ms
        9 × unexpected value "http://localhost:5000/login"


      410 |     const startTime = Date.now();
      411 |     await page.click('[data-testid="login-button"]');
    > 412 |     await expect(page).toHaveURL('/dashboard');
          |                        ^
      413 |
      414 |     // Verify dashboard loads within 3 seconds
      415 |     const loadTime = Date.now() - startTime;
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:412:24

    Error Context: ../../test-results/playwright-artifacts/main-flows-Performance-das-6a67b-oads-within-acceptable-time-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Performance-das-6a67b-oads-within-acceptable-time-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Performance › work order list handles large datasets" classname="main-flows.spec.ts" time="6.343">
<failure message="main-flows.spec.ts:419:3 work order list handles large datasets" type="FAILURE">
<![CDATA[  [chromium] › main-flows.spec.ts:419:3 › Performance › work order list handles large datasets ─────

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="work-order-list"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('[data-testid="work-order-list"]')


      427 |     // Verify virtual scrolling is working (if implemented)
      428 |     // This would need specific implementation details
    > 429 |     await expect(page.locator('[data-testid="work-order-list"]')).toBeVisible();
          |                                                                   ^
      430 |   });
      431 | });
      432 |
        at /workspaces/MaintAInPro/tests/e2e/main-flows.spec.ts:429:67

    Error Context: ../../test-results/playwright-artifacts/main-flows-Performance-wor-55672-list-handles-large-datasets-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/playwright-artifacts/main-flows-Performance-wor-55672-list-handles-large-datasets-chromium/error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="minimal-test.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="2" failures="0" skipped="0" time="1.706" errors="0">
<testcase name="minimal test - page loads" classname="minimal-test.spec.ts" time="1.033">
<system-out>
<![CDATA[Starting minimal test...
Page loaded, checking body visibility...
Body is visible, test completed successfully
]]>
</system-out>
</testcase>
<testcase name="minimal login form test" classname="minimal-test.spec.ts" time="0.673">
<system-out>
<![CDATA[Starting login form test...
Login page loaded, checking form elements...
Form inputs found, test completed successfully
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="sanity.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.803" errors="0">
<testcase name="sanity: homepage loads and root element is visible" classname="sanity.spec.ts" time="0.803">
</testcase>
</testsuite>
<testsuite name="simple-test.spec.ts" timestamp="2025-08-26T02:51:02.057Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.031" errors="0">
<testcase name="browser test" classname="simple-test.spec.ts" time="0.031">
<system-out>
<![CDATA[Browser launched successfully!
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>