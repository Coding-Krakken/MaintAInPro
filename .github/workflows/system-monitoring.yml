# MaintAInPro System Monitoring & Status
# Purpose: Scheduled and manual health checks for production/staging/API/CI/CD.
# Triggers: Only runs for code changes, not docs-only edits.

name: ðŸ“Š System Monitoring & Status
permissions:
  issues: write
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: false
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      quick_test:
        description: 'Run quick smoke tests only'
        required: false
        default: false
        type: boolean
      force_check:
        description: 'Force health check of all systems'
        required: false
        default: false
        type: boolean
  push:
    paths:
      - 'server/**'
      - 'client/**'
      - 'shared/**'
      - 'api/**'
      - 'docker-compose.yml'
      - 'drizzle.config.ts'
      - 'package.json'
      - 'tsconfig.json'
      - 'vite.config.ts'
      - '.github/workflows/system-monitoring.yml'
  schedule:
    - cron: '0 0 * * *'

jobs:
  system-health-check:
    name: System Health Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [staging, production]
    outputs:
      status: ${{ steps.set_status.outputs.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Ensure health-check.sh is executable
        run: chmod +x scripts/workflow-helpers/health-check.sh
      - name: Run system health checks
        id: set_status
        run: bash scripts/workflow-helpers/health-check.sh
      - name: Smoke Test Environment
        run: |
          ENVIRONMENT=${{ matrix.environment }}
          echo "Running smoke tests for $ENVIRONMENT..."
          if [ "$ENVIRONMENT" = "staging" ]; then
            URL="https://uasmaintenance.com/"
          else
            URL="https://unitedautosupply.org/"
          fi
          for i in {1..3}; do
            echo "Attempt $i/3..."
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || echo "000")
            echo "HTTP Response: $HTTP_CODE"
            if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "401" ]; then
              echo "âœ… $ENVIRONMENT environment is healthy (HTTP $HTTP_CODE)"
              break
            fi
            sleep 10
          done
      - name: ðŸ“¤ Upload status artifacts
        uses: actions/upload-artifact@v4
        with:
          name: system-status-${{ github.run_number }}-${{ matrix.environment }}
          path: status-report.json
          retention-days: 30

  alert-on-issues:
    needs: system-health-check
    if: needs.system-health-check.outputs.status != 'healthy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: ðŸš¨ Create system alert issue
        run: |
          npm install @octokit/rest
          node scripts/workflow-helpers/system-alert-issue.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
