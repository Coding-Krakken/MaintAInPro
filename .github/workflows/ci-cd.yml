name: Elite CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  preflight:
    name: Preflight Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Type Check
        run: npm run type-check || npm run typecheck
      - name: Custom Gates
        run: |
          python3 ci/check_gates.py
          python3 ci/validate_graph.py
          python3 ci/render_diagrams.py

  test:
    name: Run Tests & Coverage
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Run Unit & Integration Tests
        run: npm run test:all
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage report/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload SARIF Report
        uses: actions/upload-artifact@v4
        with:
          name: sarif-report
          path: SARIF report

  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  deploy:
    name: Deploy (Vercel)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}

  audit:
    name: Audit & Traceability
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log Deployment
        run: echo "Deployment to ${{ github.ref }} at $(date) by ${{ github.actor }}" >> artifacts/adr/deployment.log
      - name: Upload Audit Log
        uses: actions/upload-artifact@v4
        with:
          name: audit-log
          path: artifacts/adr/deployment.log

  rollback:
    name: Rollback (Manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Rollback Plan
        run: cat runbooks/rollback.md
# Secrets required: SNYK_TOKEN, VERCEL_TOKEN
# See docs/ops/README.md for details and customization.
