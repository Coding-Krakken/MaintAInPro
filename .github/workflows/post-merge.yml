name: Post-Merge Traceability

on:
  push:
    branches:
      - main
      - Replit

permissions:
  contents: write
  actions: read

jobs:
  traceability:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Update deployment traceability
        run: node scripts/setup/update-deployments.js
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Update changelog
        run: node scripts/changelog/update-changelog-new.js
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}

      - name: Commit traceability updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Check if there are changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "No traceability changes to commit"
          else
            git add Documentation/Blueprint/5-Traceability/Deployments.md CHANGELOG.md
            git commit -m "docs(trace): record deployment $(git rev-parse --short HEAD)" || echo "No changes to commit"
            git push origin ${{ github.ref_name }} || echo "Push failed, continuing..."
          fi

      - name: Generate deployment summary
        run: |
          echo "## 📊 Deployment Traceability Updated" >> $GITHUB_STEP_SUMMARY
          echo "- **SHA**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "- **Documentation**: Updated deployment log and changelog" >> $GITHUB_STEP_SUMMARY

      - name: Trigger next planning cycle
        uses: actions/github-script@v7
        with:
          script: |
            // Dispatch the planner workflow to continue the autonomous loop
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'planner.yml',
                ref: context.ref,
                inputs: {
                  force_update: 'false'
                }
              });
              
              console.log('✅ Triggered planner workflow for next cycle');
            } catch (error) {
              console.log('⚠️ Could not trigger planner workflow:', error.message);
              // Don't fail the workflow if planner trigger fails
            }

      - name: Loop continuation summary
        run: |
          echo "## 🔄 Autonomous Loop Continuation" >> $GITHUB_STEP_SUMMARY
          echo "The planner workflow has been triggered to:" >> $GITHUB_STEP_SUMMARY
          echo "1. Scan Blueprint documentation for new tasks" >> $GITHUB_STEP_SUMMARY
          echo "2. Create Issues labeled with \`agent-ok\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Assign Issues to GitHub Copilot coding agent" >> $GITHUB_STEP_SUMMARY
          echo "4. Continue the autonomous development cycle" >> $GITHUB_STEP_SUMMARY
